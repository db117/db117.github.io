import{_ as a,o as s,c as l,V as e}from"./chunks/framework.7cbf217e.js";const m=JSON.parse('{"title":"其他命令","description":"","frontmatter":{"title":"其他命令"},"headers":[],"relativePath":"os/linux/其他命令.md","filePath":"os/linux/其他命令.md","lastUpdated":1686036827000}'),n={name:"os/linux/其他命令.md"},t=e(`<h3 id="xargs" tabindex="-1">xargs <a class="header-anchor" href="#xargs" aria-label="Permalink to &quot;xargs&quot;">​</a></h3><blockquote><p>xargs 可以将管道或标准输入（stdin）数据转换成命令行参数，也能够从文件的输出中读取数据。</p></blockquote><p><strong>参数</strong></p><ul><li>-a file 从文件中读入作为 stdin</li><li>-e flag ，注意有的时候可能会是-E，flag必须是一个以空格分隔的标志，当xargs分析到含有flag这个标志的时候就停止。</li><li>-p 当每次执行一个argument的时候询问一次用户。</li><li>-n num 后面加次数，表示命令在执行的时候一次用的argument的个数，默认是用所有的。</li><li>-t 表示先打印命令，然后再执行。</li><li>-i 或者是-I，这得看linux支持了，将xargs的每项名称，一般是一行一行赋值给 {}，可以用 {} 代替。</li><li>-r no-run-if-empty 当xargs的输入为空的时候则停止xargs，不用再去执行了。</li><li>-s num 命令行的最大字符数，指的是 xargs 后面那个命令的最大命令行字符数。</li><li>-L num 从标准输入一次读取 num 行送给 command 命令。</li><li>-l 同 -L。</li><li>-d delim 分隔符，默认的xargs分隔符是回车，argument的分隔符是空格，这里修改的是xargs的分隔符。</li></ul><p><strong>注意事项</strong></p><blockquote><p>由于<code>xargs</code>默认将空格作为分隔符，所以不太适合处理文件名，因为文件名可能包含空格。</p><p><code>find</code>命令有一个特别的参数<code>-print0</code>，指定输出的文件列表以<code>null</code>分隔。然后，<code>xargs</code>命令的<code>-0</code>参数表示用<code>null</code>当作分隔符。</p></blockquote><p><strong>实例</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 复制 *.jpg 文件到 /data/images 目录下</span></span>
<span class="line"><span style="color:#A6ACCD;">ls *.jpg | xargs -n1 -I {} cp {} /data/images</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 删除/path路径下的所有文件。由于分隔符是null，所以处理包含空格的文件名，也不会报错。</span></span>
<span class="line"><span style="color:#A6ACCD;">find /path -type f -print0 | xargs -0 rm</span></span></code></pre></div>`,8),o=[t];function i(r,p,c,d,g,u){return s(),l("div",null,o)}const x=a(n,[["render",i]]);export{m as __pageData,x as default};
