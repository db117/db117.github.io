import{_ as t,c as r,o as e,a8 as s}from"./chunks/framework.n88ns4tz.js";const p=JSON.parse('{"title":"MySQL函数及用法示例","description":"","frontmatter":{"title":"MySQL函数及用法示例"},"headers":[],"relativePath":"database/mysql/mysql函数以及用法实例.md","filePath":"database/mysql/mysql函数以及用法实例.md","lastUpdated":1712285624000}'),l={name:"database/mysql/mysql函数以及用法实例.md"},b=s('<h2 id="字符串函数" tabindex="-1">字符串函数 <a class="header-anchor" href="#字符串函数" aria-label="Permalink to &quot;字符串函数&quot;">​</a></h2><ul><li><p>ascii(str)<br> 返回字符串str的第一个字符的ascii值(str是空串时返回0)<br> mysql&gt; select ascii(&#39;2&#39;);<br> 　　-&gt; 50<br> mysql&gt; select ascii(2);<br> 　　-&gt; 50<br> mysql&gt; select ascii(&#39;dete&#39;);<br> 　　-&gt; 100</p></li><li><p>ord(str)<br> 如果字符串str句首是单字节返回与ascii()函数返回的相同值。</p><p>如果是一个多字节字符,以格式返回((first byte ascii code)*256+(second byte ascii code))[*256+third byte asciicode...]<br> mysql&gt; select ord(&#39;2&#39;);<br> 　　 -&gt; 50</p></li><li><p>conv(n,from_base,to_base)<br> 对数字n进制转换,并转换为字串返回(任何参数为null时返回null,进制范围为2-36进制,当to_base是负数时n作为有符号数否则作无符号数,conv以64位点精度工作)<br> mysql&gt; select conv(&quot;a&quot;,16,2);<br> 　　-&gt; &#39;1010&#39; mysql&gt; select conv(&quot;6e&quot;,18,8);<br> 　　-&gt; &#39;172&#39; mysql&gt; select conv(-17,10,-18);<br> 　　-&gt; &#39;-h&#39; mysql&gt; select conv(10+&quot;10&quot;+&#39;10&#39;+0xa,10,10);<br> 　　-&gt; &#39;40&#39;</p></li><li><p>bin(n)<br> 把n转为二进制值并以字串返回(n是bigint数字,等价于conv(n,10,2))<br> mysql&gt; select bin(12);<br> 　　-&gt; &#39;1100&#39;</p></li><li><p>oct(n)<br> 把n转为八进制值并以字串返回(n是bigint数字,等价于conv(n,10,8))<br> mysql&gt; select oct(12);<br> 　　-&gt; &#39;14&#39;</p></li><li><p>hex(n)<br> 把n转为十六进制并以字串返回(n是bigint数字,等价于conv(n,10,16))<br> mysql&gt; select hex(255);<br> 　　-&gt; &#39;ff&#39;</p></li><li><p>char(n,...)<br> 返回由参数n,...对应的ascii代码字符组成的一个字串(参数是n,...是数字序列,null值被跳过)<br> mysql&gt; select char(77,121,83,81,&#39;76&#39;);<br> 　　-&gt; &#39;mysql&#39; mysql&gt; select char(77,77.3,&#39;77.3&#39;);<br> 　　-&gt; &#39;mmm&#39;</p></li><li><p>concat(str1,str2,...)<br> 把参数连成一个长字符串并返回(任何参数是null时返回null)<br> mysql&gt; select concat(&#39;my&#39;, &#39;s&#39;, &#39;ql&#39;);<br> 　　-&gt; &#39;mysql&#39; mysql&gt; select concat(&#39;my&#39;, null, &#39;ql&#39;);<br> 　　-&gt; null mysql&gt; select concat(14.3);<br> 　　-&gt; &#39;14.3&#39;</p></li><li><p>length(str)<br> octet_length(str)<br> char_length(str)<br> character_length(str)<br> 返回字符串str的长度(对于多字节字符char_length仅计算一次) mysql&gt; select length(&#39;text&#39;);<br> 　　-&gt; 4<br> mysql&gt; select octet_length(&#39;text&#39;);<br> 　　-&gt; 4</p></li><li><p>locate(substr,str)<br> position(substr in str)<br> 返回字符串substr在字符串str第一次出现的位置(str不包含substr时返回0)<br> mysql&gt; select locate(&#39;bar&#39;, &#39;foobarbar&#39;);<br> 　　-&gt; 4<br> mysql&gt; select locate(&#39;xbar&#39;, &#39;foobar&#39;);<br> 　　-&gt; 0</p></li><li><p>locate(substr,str,pos)<br> 返回字符串substr在字符串str的第pos个位置起第一次出现的位置(str不包含substr时返回0)<br> mysql&gt; select locate(&#39;bar&#39;, &#39;foobarbar&#39;,5);<br> 　　-&gt; 7</p></li><li><p>instr(str,substr)<br> 返回字符串substr在字符串str第一次出现的位置(str不包含substr时返回0)<br> mysql&gt; select instr(&#39;foobarbar&#39;, &#39;bar&#39;);<br> 　　-&gt; 4<br> mysql&gt; select instr(&#39;xbar&#39;, &#39;foobar&#39;);<br> 　　-&gt; 0</p></li><li><p>lpad(str,len,padstr)<br> 用字符串padstr填补str左端直到字串长度为len并返回<br> mysql&gt; select lpad(&#39;hi&#39;,4,&#39;??&#39;);<br> 　　-&gt; &#39;??hi&#39;</p></li><li><p>rpad(str,len,padstr)<br> 用字符串padstr填补str右端直到字串长度为len并返回<br> mysql&gt; select rpad(&#39;hi&#39;,5,&#39;?&#39;);<br> 　　-&gt; &#39;hi???&#39;</p></li><li><p>left(str,len)<br> 返回字符串str的左端len个字符<br> mysql&gt; select left(&#39;foobarbar&#39;, 5);<br> 　　-&gt; &#39;fooba&#39;</p></li><li><p>right(str,len)<br> 返回字符串str的右端len个字符<br> mysql&gt; select right(&#39;foobarbar&#39;, 4);<br> 　　-&gt; &#39;rbar&#39;</p></li><li><p>substring(str,pos,len)<br> substring(str from pos for len)<br> mid(str,pos,len)<br> 返回字符串str的位置pos起len个字符mysql&gt; select substring(&#39;quadratically&#39;,5,6);<br> 　　-&gt; &#39;ratica&#39;</p></li><li><p>substring(str,pos)<br> substring(str from pos)<br> 返回字符串str的位置pos起的一个子串<br> mysql&gt; select substring(&#39;quadratically&#39;,5);<br> 　　-&gt; &#39;ratically&#39; mysql&gt; select substring(&#39;foobarbar&#39; from 4);<br> 　　-&gt; &#39;barbar&#39;</p></li><li><p>substring_index(str,delim,count)<br> 返回从字符串str的第count个出现的分隔符delim之后的子串 (count为正数时返回左端,否则返回右端子串)<br> mysql&gt; select substring_index(&#39;www.mysql.com&#39;, &#39;.&#39;, 2);<br> 　　-&gt; &#39;www.mysql&#39; mysql&gt; select substring_index(&#39;www.mysql.com&#39;, &#39;.&#39;, -2);<br> 　　-&gt; &#39;mysql.com&#39;</p></li><li><p>ltrim(str)<br> 返回删除了左空格的字符串str<br> mysql&gt; select ltrim(&#39; barbar&#39;);<br> 　　-&gt; &#39;barbar&#39;</p></li><li><p>rtrim(str)<br> 返回删除了右空格的字符串str<br> mysql&gt; select rtrim(&#39;barbar &#39;);<br> 　　-&gt; &#39;barbar&#39;</p></li><li><p>trim([[both | leading | trailing] [remstr] from] str)<br> 返回前缀或后缀remstr被删除了的字符串str(位置参数默认both,remstr默认值为空格)<br> mysql&gt; select trim(&#39; bar &#39;);<br> 　　-&gt; &#39;bar&#39; mysql&gt; select trim(leading &#39;x&#39; from &#39;xxxbarxxx&#39;);<br> 　　-&gt; &#39;barxxx&#39; mysql&gt; select trim(both &#39;x&#39; from &#39;xxxbarxxx&#39;);<br> 　　-&gt; &#39;bar&#39; mysql&gt; select trim(trailing &#39;xyz&#39; from &#39;barxxyz&#39;);<br> 　　-&gt; &#39;barx&#39;</p></li><li><p>soundex(str)<br> 返回str的一个同音字符串(听起来“大致相同”字符串有相同的 同音字符串,非数字字母字符被忽略,在a-z外的字母被当作元音)<br> mysql&gt; select soundex(&#39;hello&#39;);<br> 　　-&gt; &#39;h400&#39; mysql&gt; select soundex(&#39;quadratically&#39;);<br> 　　-&gt; &#39;q36324&#39;</p></li><li><p>space(n)<br> 返回由n个空格字符组成的一个字符串<br> mysql&gt; select space(6);<br> 　　-&gt; &#39; &#39;</p></li><li><p>replace(str,from_str,to_str)<br> 用字符串to_str替换字符串str中的子串from_str并返回<br> mysql&gt; select replace(&#39;www.mysql.com&#39;, &#39;w&#39;, &#39;ww&#39;);<br> 　　-&gt; &#39;wwwwww.mysql.com&#39;</p></li><li><p>repeat(str,count)<br> 返回由count个字符串str连成的一个字符串(任何参数为null时 返回null,count&lt;=0时返回一个空字符串)<br> mysql&gt; select repeat(&#39;mysql&#39;, 3);<br> 　　-&gt; &#39;mysqlmysqlmysql&#39;</p></li><li><p>reverse(str)<br> 颠倒字符串str的字符顺序并返回<br> mysql&gt; select reverse(&#39;abc&#39;);<br> 　　-&gt; &#39;cba&#39;</p></li><li><p>insert(str,pos,len,newstr)<br> 把字符串str由位置pos起len个字符长的子串替换为字符串 newstr并返回<br> mysql&gt; select insert(&#39;quadratic&#39;, 3, 4, &#39;what&#39;);<br> 　　-&gt; &#39;quwhattic&#39;</p></li><li><p>elt(n,str1,str2,str3,...)<br> 返回第n个字符串(n小于1或大于参数个数返回null)<br> mysql&gt; select elt(1, &#39;ej&#39;, &#39;heja&#39;, &#39;hej&#39;, &#39;foo&#39;);<br> 　　-&gt; &#39;ej&#39; mysql&gt; select elt(4, &#39;ej&#39;, &#39;heja&#39;, &#39;hej&#39;, &#39;foo&#39;);<br> 　　-&gt; &#39;foo&#39;</p></li><li><p>field(str,str1,str2,str3,...)<br> 返回str等于其后的第n个字符串的序号(如果str没找到返回0)<br> mysql&gt; select field(&#39;ej&#39;, &#39;hej&#39;, &#39;ej&#39;, &#39;heja&#39;, &#39;hej&#39;, &#39;foo&#39;);<br> 　　-&gt; 2<br> mysql&gt; select field(&#39;fo&#39;, &#39;hej&#39;, &#39;ej&#39;, &#39;heja&#39;, &#39;hej&#39;, &#39;foo&#39;);<br> 　　-&gt; 0</p></li><li><p>find_in_set(str,strlist)<br> 返回str在字符串集strlist中的序号(任何参数是null则返回 null,如果str没找到返回0,参数1包含&quot;,&quot;时工作异常)<br> mysql&gt; select find_in_set(&#39;b&#39;,&#39;a,b,c,d&#39;);<br> 　　-&gt; 2</p></li><li><p>make_set(bits,str1,str2,...)<br> 把参数1的数字转为二进制,假如某个位置的二进制位等于1,对应 位置的字串选入字串集并返回(null串不添加到结果中)<br> mysql&gt; select make_set(1,&#39;a&#39;,&#39;b&#39;,&#39;c&#39;);<br> 　　-&gt; &#39;a&#39; mysql&gt; select make_set(1 | 4,&#39;hello&#39;,&#39;nice&#39;,&#39;world&#39;);<br> 　　-&gt; &#39;hello,world&#39; mysql&gt; select make_set(0,&#39;a&#39;,&#39;b&#39;,&#39;c&#39;);<br> 　　-&gt; &#39;&#39;</p></li><li><p>export_set(bits,on,off,[separator,[number_of_bits]])<br> 按bits排列字符串集,只有当位等于1时插入字串on,否则插入 off(separator默认值&quot;,&quot;,number_of_bits参数使用时长度不足补0 而过长截断)<br> mysql&gt; select export_set(5,&#39;y&#39;,&#39;n&#39;,&#39;,&#39;,4)<br> 　　-&gt; y,n,y,n</p></li><li><p>lcase(str)<br> lower(str)<br> 返回小写的字符串str<br> mysql&gt; select lcase(&#39;quadratically&#39;);<br> 　　-&gt; &#39;quadratically&#39;</p></li><li><p>ucase(str)<br> upper(str)<br> 返回大写的字符串str<br> mysql&gt; select ucase(&#39;quadratically&#39;);<br> 　　-&gt; &#39;quadratically&#39;</p></li><li><p>load_file(file_name)<br> 读入文件并且作为一个字符串返回文件内容(文件无法找到,路径 不完整,没有权限,长度大于max_allowed_packet会返回null)<br> mysql&gt; update table_name set blob_column=load_file (&quot;/tmp/picture&quot;) where id=1;</p></li></ul><h2 id="数学函数" tabindex="-1">数学函数 <a class="header-anchor" href="#数学函数" aria-label="Permalink to &quot;数学函数&quot;">​</a></h2><ul><li><p>abs(n)<br> 返回n的绝对值<br> mysql&gt; select abs(2);<br> 　　-&gt; 2<br> mysql&gt; select abs(-32);<br> 　　-&gt; 32</p></li><li><p>sign(n)<br> 返回参数的符号(为-1、0或1)<br> mysql&gt; select sign(-32);<br> 　　-&gt; -1<br> mysql&gt; select sign(0);<br> 　　-&gt; 0<br> mysql&gt; select sign(234);<br> 　　-&gt; 1</p></li><li><p>mod(n,m)<br> 取模运算,返回n被m除的余数(同%操作符)<br> mysql&gt; select mod(234, 10);<br> 　　-&gt; 4<br> mysql&gt; select 234 % 10;<br> 　　-&gt; 4<br> mysql&gt; select mod(29,9);<br> 　　-&gt; 2</p></li><li><p>floor(n)<br> 返回不大于n的最大整数值<br> mysql&gt; select floor(1.23);<br> 　　-&gt; 1<br> mysql&gt; select floor(-1.23);<br> 　　-&gt; -2</p></li><li><p>ceiling(n)<br> 返回不小于n的最小整数值<br> mysql&gt; select ceiling(1.23);<br> 　　-&gt; 2<br> mysql&gt; select ceiling(-1.23);<br> 　　-&gt; -1</p></li><li><p>round(n,d)<br> 返回n的四舍五入值,保留d位小数(d的默认值为0)<br> mysql&gt; select round(-1.23);<br> 　　-&gt; -1<br> mysql&gt; select round(-1.58);<br> 　　-&gt; -2<br> mysql&gt; select round(1.58);<br> 　　-&gt; 2<br> mysql&gt; select round(1.298, 1);<br> 　　-&gt; 1.3<br> mysql&gt; select round(1.298, 0);<br> 　　-&gt; 1</p></li><li><p>exp(n)<br> 返回值e的n次方(自然对数的底)<br> mysql&gt; select exp(2);<br> 　　-&gt; 7.389056<br> mysql&gt; select exp(-2);<br> 　　-&gt; 0.135335</p></li><li><p>log(n)<br> 返回n的自然对数<br> mysql&gt; select log(2);<br> 　　-&gt; 0.693147<br> mysql&gt; select log(-2);<br> 　　-&gt; null</p></li><li><p>log10(n)<br> 返回n以10为底的对数<br> mysql&gt; select log10(2);<br> 　　-&gt; 0.301030<br> mysql&gt; select log10(100);<br> 　　-&gt; 2.000000<br> mysql&gt; select log10(-100);<br> 　　-&gt; null</p></li><li><p>pow(x,y)<br> power(x,y)<br> 　返回值x的y次幂<br> mysql&gt; select pow(2,2);<br> 　　-&gt; 4.000000<br> mysql&gt; select pow(2,-2);<br> 　　-&gt; 0.250000</p></li><li><p>sqrt(n)<br> 　返回非负数n的平方根<br> mysql&gt; select sqrt(4);<br> 　　-&gt; 2.000000<br> mysql&gt; select sqrt(20);<br> 　　-&gt; 4.472136</p></li><li><p>pi()<br> 　返回圆周率<br> mysql&gt; select pi();<br> 　　-&gt; 3.141593</p></li><li><p>cos(n)<br> 　返回n的余弦值<br> mysql&gt; select cos(pi());<br> 　　-&gt; -1.000000</p></li><li><p>sin(n)<br> 　返回n的正弦值<br> mysql&gt; select sin(pi());<br> 　　-&gt; 0.000000</p></li><li><p>tan(n)<br> 返回n的正切值<br> mysql&gt; select tan(pi()+1);<br> 　　-&gt; 1.557408</p></li><li><p>acos(n)<br> 　返回n反余弦(n是余弦值,在-1到1的范围,否则返回null)<br> mysql&gt; select acos(1);<br> 　　-&gt; 0.000000<br> mysql&gt; select acos(1.0001);<br> 　　-&gt; null<br> mysql&gt; select acos(0);<br> 　　-&gt; 1.570796</p></li><li><p>asin(n)<br> 返回n反正弦值<br> mysql&gt; select asin(0.2);<br> 　　-&gt; 0.201358<br> mysql&gt; select asin(&#39;foo&#39;);<br> 　　-&gt; 0.000000</p></li><li><p>atan(n)<br> 返回n的反正切值<br> mysql&gt; select atan(2);<br> 　　-&gt; 1.107149<br> mysql&gt; select atan(-2);<br> 　　-&gt; -1.107149<br> atan2(x,y)<br> 　返回2个变量x和y的反正切(类似y/x的反正切,符号决定象限)<br> mysql&gt; select atan(-2,2);<br> 　　-&gt; -0.785398<br> mysql&gt; select atan(pi(),0);<br> 　　-&gt; 1.570796</p></li><li><p>cot(n)<br> 返回x的余切<br> mysql&gt; select cot(12);<br> 　　-&gt; -1.57267341<br> mysql&gt; select cot(0);<br> 　　-&gt; null</p></li><li><p>rand()<br> rand(n)<br> 返回在范围0到1.0内的随机浮点值(可以使用数字n作为初始值) mysql&gt; select rand();<br> 　　-&gt; 0.5925<br> mysql&gt; select rand(20);<br> 　　-&gt; 0.1811<br> mysql&gt; select rand(20);<br> 　　-&gt; 0.1811<br> mysql&gt; select rand();<br> 　　-&gt; 0.2079<br> mysql&gt; select rand();<br> 　　-&gt; 0.7888</p></li><li><p>degrees(n)<br> 把n从弧度变换为角度并返回<br> mysql&gt; select degrees(pi());<br> 　　-&gt; 180.000000</p></li><li><p>radians(n)<br> 把n从角度变换为弧度并返回<br> mysql&gt; select radians(90);<br> 　　-&gt; 1.570796</p></li><li><p>truncate(n,d)<br> 保留数字n的d位小数并返回<br> mysql&gt; select truncate(1.223,1);<br> 　　-&gt; 1.2<br> mysql&gt; select truncate(1.999,1);<br> 　　-&gt; 1.9<br> mysql&gt; select truncate(1.999,0);<br> 　　-&gt; 1</p></li><li><p>least(x,y,...)<br> 返回最小值(如果返回值被用在整数(实数或大小敏感字串)上下文或所有参数都是整数(实数或大小敏感字串)则他们作为整数(实数或大小敏感字串)比较,否则按忽略大小写的字符串被比较)<br> mysql&gt; select least(2,0);<br> 　　-&gt; 0<br> mysql&gt; select least(34.0,3.0,5.0,767.0);<br> 　　-&gt; 3.0<br> mysql&gt; select least(&quot;b&quot;,&quot;a&quot;,&quot;c&quot;);<br> 　　-&gt; &quot;a&quot;</p></li><li><p>greatest(x,y,...)<br> 返回最大值(其余同least())<br> mysql&gt; select greatest(2,0);<br> 　　-&gt; 2<br> mysql&gt; select greatest(34.0,3.0,5.0,767.0);<br> 　　-&gt; 767.0<br> mysql&gt; select greatest(&quot;b&quot;,&quot;a&quot;,&quot;c&quot;);<br> 　　-&gt; &quot;c&quot;</p></li></ul><h2 id="时间函数" tabindex="-1">时间函数 <a class="header-anchor" href="#时间函数" aria-label="Permalink to &quot;时间函数&quot;">​</a></h2><ul><li><p>dayofweek(date)<br> 返回日期date是星期几(1=星期天,2=星期一,……7=星期六,odbc标准)<br> mysql&gt; select dayofweek(&#39;1998-02-03&#39;);<br> 　　-&gt; 3</p></li><li><p>weekday(date)<br> 返回日期date是星期几(0=星期一,1=星期二,……6= 星期天)。 mysql&gt; select weekday(&#39;1997-10-04 22:23:00&#39;);<br> 　　-&gt; 5<br> mysql&gt; select weekday(&#39;1997-11-05&#39;);<br> 　　-&gt; 2</p></li><li><p>dayofmonth(date)<br> 返回date是一月中的第几日(在1到31范围内)<br> mysql&gt; select dayofmonth(&#39;1998-02-03&#39;);<br> 　　-&gt; 3</p></li><li><p>dayofyear(date)<br> 返回date是一年中的第几日(在1到366范围内)<br> mysql&gt; select dayofyear(&#39;1998-02-03&#39;);<br> 　　-&gt; 34</p></li><li><p>month(date)<br> 返回date中的月份数值<br> mysql&gt; select month(&#39;1998-02-03&#39;);<br> 　　-&gt; 2</p></li><li><p>dayname(date)<br> 返回date是星期几(按英文名返回)<br> mysql&gt; select dayname(&quot;1998-02-05&quot;);<br> 　　-&gt; &#39;thursday&#39;</p></li><li><p>monthname(date)<br> 返回date是几月(按英文名返回)<br> mysql&gt; select monthname(&quot;1998-02-05&quot;);<br> 　　-&gt; &#39;february&#39;</p></li><li><p>quarter(date)<br> 返回date是一年的第几个季度<br> mysql&gt; select quarter(&#39;98-04-01&#39;);<br> 　　-&gt; 2</p></li><li><p>week(date,first)<br> 返回date是一年的第几周(first默认值0,first取值1表示周一是 周的开始,0从周日开始)<br> mysql&gt; select week(&#39;1998-02-20&#39;);<br> 　　-&gt; 7<br> mysql&gt; select week(&#39;1998-02-20&#39;,0);<br> 　　-&gt; 7<br> mysql&gt; select week(&#39;1998-02-20&#39;,1);<br> 　　-&gt; 8</p></li><li><p>year(date)<br> 返回date的年份(范围在1000到9999)<br> mysql&gt; select year(&#39;98-02-03&#39;);<br> 　　-&gt; 1998</p></li><li><p>hour(time)<br> 返回time的小时数(范围是0到23)<br> mysql&gt; select hour(&#39;10:05:03&#39;);<br> 　　-&gt; 10</p></li><li><p>minute(time)<br> 返回time的分钟数(范围是0到59)<br> mysql&gt; select minute(&#39;98-02-03 10:05:03&#39;);<br> 　　-&gt; 5</p></li><li><p>second(time)<br> 返回time的秒数(范围是0到59)<br> mysql&gt; select second(&#39;10:05:03&#39;);<br> 　　-&gt; 3</p></li><li><p>period_add(p,n)<br> 增加n个月到时期p并返回(p的格式yymm或yyyymm)<br> mysql&gt; select period_add(9801,2);<br> 　　-&gt; 199803</p></li><li><p>period_diff(p1,p2)<br> 返回在时期p1和p2之间月数(p1和p2的格式yymm或yyyymm)<br> mysql&gt; select period_diff(9802,199703);<br> 　　-&gt; 11</p></li><li><p>date_add(date,interval expr type)<br> date_sub(date,interval expr type)<br> adddate(date,interval expr type)<br> subdate(date,interval expr type)<br> 对日期时间进行加减法运算<br> (adddate()和subdate()是date_add()和date_sub()的同义词,也 可以用运算符+和-而不是函数<br> date是一个datetime或date值,expr对date进行加减法的一个表 达式字符串type指明表达式expr应该如何被解释<br> 　[type值 含义 期望的expr格式]:<br> 　second 秒 seconds<br> 　minute 分钟 minutes<br> 　hour 时间 hours<br> 　day 天 days<br> 　month 月 months<br> 　year 年 years<br> 　minute_second 分钟和秒 &quot;minutes:seconds&quot;<br> 　hour_minute 小时和分钟 &quot;hours:minutes&quot;<br> 　day_hour 天和小时 &quot;days hours&quot;<br> 　year_month 年和月 &quot;years-months&quot;<br> 　hour_second 小时, 分钟， &quot;hours:minutes:seconds&quot;<br> 　day_minute 天, 小时, 分钟 &quot;days hours:minutes&quot;<br> 　day_second 天, 小时, 分钟, 秒 &quot;days hours:minutes:seconds&quot; 　expr中允许任何标点做分隔符,如果所有是date值时结果是一个 date值,否则结果是一个datetime值)<br> 　如果type关键词不完整,则mysql从右端取值,day_second因为缺 少小时分钟等于minute_second)<br> 　如果增加month、year_month或year,天数大于结果月份的最大天 数则使用最大天数)<br> mysql&gt; select &quot;1997-12-31 23:59:59&quot; + interval 1 second;<br> 　　-&gt; 1998-01-01 00:00:00<br> mysql&gt; select interval 1 day + &quot;1997-12-31&quot;;<br> 　　-&gt; 1998-01-01<br> mysql&gt; select &quot;1998-01-01&quot; - interval 1 second;<br> 　　-&gt; 1997-12-31 23:59:59<br> mysql&gt; select date_add(&quot;1997-12-31 23:59:59&quot;,interval 1 second);<br> 　　-&gt; 1998-01-01 00:00:00<br> mysql&gt; select date_add(&quot;1997-12-31 23:59:59&quot;,interval 1 day);<br> 　　-&gt; 1998-01-01 23:59:59<br> mysql&gt; select date_add(&quot;1997-12-31 23:59:59&quot;,interval &quot;1:1&quot; minute_second);<br> 　　-&gt; 1998-01-01 00:01:00<br> mysql&gt; select date_sub(&quot;1998-01-01 00:00:00&quot;,interval &quot;1 1:1:1&quot; day_second);<br> 　　-&gt; 1997-12-30 22:58:59<br> mysql&gt; select date_add(&quot;1998-01-01 00:00:00&quot;, interval &quot;-1 10&quot; day_hour);<br> 　　-&gt; 1997-12-30 14:00:00<br> mysql&gt; select date_sub(&quot;1998-01-02&quot;, interval 31 day);<br> 　　-&gt; 1997-12-02<br> mysql&gt; select extract(year from &quot;1999-07-02&quot;);<br> 　　-&gt; 1999<br> mysql&gt; select extract(year_month from &quot;1999-07-02 01:02:03&quot;);<br> 　　-&gt; 199907<br> mysql&gt; select extract(day_minute from &quot;1999-07-02 01:02:03&quot;);<br> 　　-&gt; 20102</p></li><li><p>to_days(date)<br> 返回日期date是西元0年至今多少天(不计算1582年以前)<br> mysql&gt; select to_days(950501);<br> 　　-&gt; 728779<br> mysql&gt; select to_days(&#39;1997-10-07&#39;);<br> 　　-&gt; 729669</p></li><li><p>from_days(n)<br> 给出西元0年至今多少天返回date值(不计算1582年以前)<br> mysql&gt; select from_days(729669);<br> 　　-&gt; &#39;1997-10-07&#39;</p></li><li><p>date_format(date,format)<br> 　根据format字符串格式化date值<br> 　(在format字符串中可用标志符:<br> 　%m 月名字(january……december)<br> 　%w 星期名字(sunday……saturday)<br> 　%d 有英语前缀的月份的日期(1st, 2nd, 3rd, 等等。）<br> 　%y 年, 数字, 4 位<br> 　%y 年, 数字, 2 位<br> 　%a 缩写的星期名字(sun……sat)<br> 　%d 月份中的天数, 数字(00……31)<br> 　%e 月份中的天数, 数字(0……31)<br> 　%m 月, 数字(01……12)<br> 　%c 月, 数字(1……12)<br> 　%b 缩写的月份名字(jan……dec)<br> 　%j 一年中的天数(001……366)<br> 　%h 小时(00……23)<br> 　%k 小时(0……23)<br> 　%h 小时(01……12)<br> 　%i 小时(01……12)<br> 　%l 小时(1……12)<br> 　%i 分钟, 数字(00……59)<br> 　%r 时间,12 小时(hh:mm:ss [ap]m)<br> 　%t 时间,24 小时(hh:mm:ss)<br> 　%s 秒(00……59)<br> 　%s 秒(00……59)<br> 　%p am或pm<br> 　%w 一个星期中的天数(0=sunday ……6=saturday ）<br> 　%u 星期(0……52), 这里星期天是星期的第一天<br> 　%u 星期(0……52), 这里星期一是星期的第一天<br> 　%% 字符% )<br> mysql&gt; select date_format(&#39;1997-10-04 22:23:00&#39;,&#39;%w %m % y&#39;);<br> 　　-&gt; &#39;saturday october 1997&#39;<br> mysql&gt; select date_format(&#39;1997-10-04 22:23:00&#39;,&#39;%h:%i:% s&#39;);<br> 　　-&gt; &#39;22:23:00&#39;<br> mysql&gt; select date_format(&#39;1997-10-04 22:23:00&#39;,&#39;%d %y %a %d %m %b %j&#39;);<br> 　　-&gt; &#39;4th 97 sat 04 10 oct 277&#39;<br> mysql&gt; select date_format(&#39;1997-10-04 22:23:00&#39;,&#39;%h %k %i %r %t %s %w&#39;);<br> 　　-&gt; &#39;22 22 10 10:23:00 pm 22:23:00 00 6&#39;</p></li><li><p>time_format(time,format)<br> 　和date_format()类似,但time_format只处理小时、分钟和秒(其 余符号产生一个null值或0)</p></li><li><p>curdate()<br> current_date()<br> 　以&#39;yyyy-mm-dd&#39;或yyyymmdd格式返回当前日期值(根据返回值所 处上下文是字符串或数字)<br> mysql&gt; select curdate();<br> 　　-&gt; &#39;1997-12-15&#39;<br> mysql&gt; select curdate() + 0;<br> 　　-&gt; 19971215</p></li><li><p>curtime()<br> current_time()<br> 　以&#39;hh:mm:ss&#39;或hhmmss格式返回当前时间值(根据返回值所处上 下文是字符串或数字)<br> mysql&gt; select curtime();<br> 　　-&gt; &#39;23:50:26&#39;<br> mysql&gt; select curtime() + 0;<br> 　　-&gt; 235026</p></li><li><p>now()<br> sysdate()<br> current_timestamp()<br> 　以&#39;yyyy-mm-dd hh:mm:ss&#39;或yyyymmddhhmmss格式返回当前日期 时间(根据返回值所处上下文是字符串或数字)<br> mysql&gt; select now();<br> 　　-&gt; &#39;1997-12-15 23:50:26&#39;<br> mysql&gt; select now() + 0;<br> 　　-&gt; 19971215235026</p></li><li><p>unix_timestamp()<br> unix_timestamp(date)<br> 返回一个unix时间戳(从&#39;1970-01-01 00:00:00&#39;gmt开始的秒 数,date默认值为当前时间)<br> mysql&gt; select unix_timestamp();<br> 　　-&gt; 882226357<br> mysql&gt; select unix_timestamp(&#39;1997-10-04 22:23:00&#39;);<br> 　　-&gt; 875996580</p></li><li><p>from_unixtime(unix_timestamp)<br> 以&#39;yyyy-mm-dd hh:mm:ss&#39;或yyyymmddhhmmss格式返回时间戳的 值(根据返回值所处上下文是字符串或数字)<br> mysql&gt; select from_unixtime(875996580);<br> 　　-&gt; &#39;1997-10-04 22:23:00&#39;<br> mysql&gt; select from_unixtime(875996580) + 0;<br> 　　-&gt; 19971004222300</p></li><li><p>from_unixtime(unix_timestamp,format)<br> 以format字符串格式返回时间戳的值<br> mysql&gt; select from_unixtime(unix_timestamp(),&#39;%y %d %m % h:%i:%s %x&#39;);<br> 　　-&gt; &#39;1997 23rd december 03:43:30 x&#39;</p></li><li><p>sec_to_time(seconds)<br> 以&#39;hh:mm:ss&#39;或hhmmss格式返回秒数转成的time值(根据返回值所处上下文是字符串或数字)<br> mysql&gt; select sec_to_time(2378);<br> 　　-&gt; &#39;00:39:38&#39;<br> mysql&gt; select sec_to_time(2378) + 0;<br> 　　-&gt; 3938</p></li><li><p>time_to_sec(time)<br> 返回time值有多少秒<br> mysql&gt; select time_to_sec(&#39;22:23:00&#39;);<br> 　　-&gt; 80580<br> mysql&gt; select time_to_sec(&#39;00:39:38&#39;);<br> 　　-&gt; 2378</p></li></ul><h2 id="转换函数" tabindex="-1">转换函数 <a class="header-anchor" href="#转换函数" aria-label="Permalink to &quot;转换函数&quot;">​</a></h2><ul><li>cast 用法：cast(字段 as 数据类型) [当然是否可以成功转换，还要看数据类型强制转化时注意的问题] 实例：select cast(a as unsigned) as b from cardserver where order by b desc;</li><li>convert： 用法：convert(字段,数据类型) 实例：select convert(a ,unsigned) as b from cardserver where order by b desc;</li></ul>',8),a=[b];function i(m,g,o,c,n,y){return e(),r("div",null,a)}const d=t(l,[["render",i]]);export{p as __pageData,d as default};
