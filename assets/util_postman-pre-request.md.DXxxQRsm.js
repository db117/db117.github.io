import{_ as t,c as e,l as s,a,t as n,a8 as l,o as h}from"./chunks/framework.DWDnyA0p.js";const F=JSON.parse('{"title":"postman预请求处理","description":"","frontmatter":{"title":"postman预请求处理"},"headers":[],"relativePath":"util/postman-pre-request.md","filePath":"util/postman-pre-request.md","lastUpdated":1712830748000}'),r={name:"util/postman-pre-request.md"},o=s("p",null,[s("a",{href:"https://learning.postman.com/docs/getting-started/introduction/",target:"_blank",rel:"noreferrer"},"官方文档")],-1),p=s("h3",{id:"内置动态变量",tabindex:"-1"},[a("内置动态变量 "),s("a",{class:"header-anchor",href:"#内置动态变量","aria-label":'Permalink to "内置动态变量"'},"​")],-1),d=s("p",null,[s("a",{href:"https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",target:"_blank",rel:"noreferrer"},"Dynamic variables | Postman Learning Center")],-1),k=s("p",null,[a("在脚本中使用需要用"),s("code",null,"pm.environment.replaceIn(variableName:String)"),a("替换，")],-1),c=l(`<ul><li><strong><code>$guid </code></strong> ：uuid</li><li><strong><code>$timestamp</code></strong>：时间戳（秒）</li><li><strong><code>$isoTimestamp</code></strong>：2020-06-09T21:10:36.177Z</li><li><strong><code>$randomUUID</code></strong>：uuid</li><li><strong><code>$randomAlphaNumeric</code></strong>：随机字母数字</li><li><strong><code>$randomBoolean</code></strong>：随机生成 true|false</li><li><strong><code>$randomInt</code></strong>：随机生成[0,1000]</li><li><strong><code>$randomColor</code></strong>:随机生成颜色，&quot;red&quot;，&quot;fuchsia&quot;，&quot;grey&quot;等</li><li><strong><code>$randomHexColor</code></strong>：随机生成颜色，&quot;#47594a&quot;</li><li><strong><code>$randomAbbreviation</code></strong>：随机生成缩写，SQL，JSON</li><li><strong><code>$randomIP</code></strong>：随机生成 ipv4</li><li><strong><code>$randomIPV6</code></strong>：随机生成 IPv6</li><li><strong><code>$randomMACAddress</code></strong>：随机生成 MAC</li><li><strong><code>$randomPassword</code></strong>：随机生成一个密码，包含字母数字</li><li><strong><code>$randomLocale</code></strong>：随机生成语言编码，“zh”</li><li><strong><code>$randomUserAgent</code></strong>：随机生成 user agent</li><li><strong><code>$randomProtocol</code></strong>：随机生成网络协议，&quot;http&quot;，&quot;https&quot;</li></ul><hr><h3 id="常用操作" tabindex="-1">常用操作 <a class="header-anchor" href="#常用操作" aria-label="Permalink to &quot;常用操作&quot;">​</a></h3><h4 id="设置属性" tabindex="-1">设置属性 <a class="header-anchor" href="#设置属性" aria-label="Permalink to &quot;设置属性&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pm.environment.set(&quot;key&quot;, value);</span></span></code></pre></div><h4 id="生成sign" tabindex="-1">生成sign <a class="header-anchor" href="#生成sign" aria-label="Permalink to &quot;生成sign&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> accessToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CryptoJS.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MD5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pivateKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param.biz_params)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="添加header" tabindex="-1">添加header <a class="header-anchor" href="#添加header" aria-label="Permalink to &quot;添加header&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pm.request.headers.add({</span></span>
<span class="line"><span>  key: &quot;aad-accesstoken&quot;,</span></span>
<span class="line"><span>  value: &quot;{{aad-accesstoken}}&quot;});</span></span></code></pre></div><hr><h3 id="常见参数获取" tabindex="-1">常见参数获取 <a class="header-anchor" href="#常见参数获取" aria-label="Permalink to &quot;常见参数获取&quot;">​</a></h3><h4 id="获取时间" tabindex="-1">获取时间 <a class="header-anchor" href="#获取时间" aria-label="Permalink to &quot;获取时间&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> moment </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;moment&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;YYYYMMDDHHmmss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="随机数" tabindex="-1">随机数 <a class="header-anchor" href="#随机数" aria-label="Permalink to &quot;随机数&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 随机数 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> randomNumber </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="获取请求body" tabindex="-1">获取请求body <a class="header-anchor" href="#获取请求body" aria-label="Permalink to &quot;获取请求body&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 请求参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pm.request.body.raw;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj)</span></span></code></pre></div>`,17);function g(i,u,E,m,y,b){return h(),e("div",null,[o,p,s("blockquote",null,[d,k,s("p",null,[a("如"),s("code",null,'var timestamp = pm.environment.replaceIn("'+n(i.$timestamp)+'");',1)])]),c])}const q=t(r,[["render",g]]);export{F as __pageData,q as default};
