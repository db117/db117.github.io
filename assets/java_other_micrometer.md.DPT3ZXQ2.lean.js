import{_ as l,c as e,a3 as r,o as t}from"./chunks/framework.YXwISiAl.js";const g=JSON.parse('{"title":"micrometer","description":"","frontmatter":{"title":"micrometer"},"headers":[],"relativePath":"java/other/micrometer.md","filePath":"java/other/micrometer.md"}'),o={name:"java/other/micrometer.md"};function a(s,i,n,c,m,p){return t(),e("div",null,i[0]||(i[0]=[r('<blockquote><p><a href="https://micrometer.io/" target="_blank" rel="noreferrer">Micrometer Application Observability</a></p><p><a href="https://github.com/micrometer-metrics/micrometer" target="_blank" rel="noreferrer">micrometer-metrics/micrometer: An application observability facade for the most popular observability tools. Think SLF4J, but for observability. (github.com)</a></p></blockquote><h3 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h3><ul><li><p><strong>Registry</strong></p><ul><li>相当于一个容器，存放一下指标</li><li><code>Global Registry</code>一个公用的容器</li></ul></li><li><p><strong>Meters</strong></p><ul><li>指标，整个项目就是收集维护一系列指标</li></ul></li><li><p><strong>Tag</strong></p><ul><li>标签每一个指标都有一系列的标签，Meters+Tag 才能确定一个唯一的数据</li><li><code>Common Tags</code>,一个<code>Registry</code>中公用的标签</li><li>标签值不能为 null</li></ul></li><li><p><strong>Meter Filters</strong></p><ul><li>指标过滤器</li><li>实现方法来判断是否需要该指标 <ul><li>DENY：不需要（不进行后续判断）</li><li>NEUTRAL：没有其他的 DENY 则需要，交给后续的 filter 来决定。</li><li>ACCEPT：需要（不进行后续判断）</li></ul></li><li>Transforming metrics <ul><li>替换过滤符合条件的指标</li></ul></li></ul></li><li><p><strong>Counters</strong></p><ul><li>只能累加的计数器</li><li>适合统计方法执行次数，接口调用次数等</li></ul></li><li><p><strong>Gauges</strong></p><ul><li>就是一个数字。</li><li>适合一个可以量化的属性，最长用的指标类型。</li><li>比如某张表的行数，硬盘容量，cpu，内存使用情况等</li></ul></li><li><p><strong>Timers</strong></p><ul><li>某一个事件执行的情况</li><li>记录接口，方法等执行时间情况</li></ul></li></ul>',3)]))}const d=l(o,[["render",a]]);export{g as __pageData,d as default};
