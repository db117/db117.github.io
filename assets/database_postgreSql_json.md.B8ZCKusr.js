import{_ as o,c as d,o as e,ah as a}from"./chunks/framework.Zxa0uMAo.js";const i=JSON.parse('{"title":"json 类型","description":"","frontmatter":{"title":"json 类型"},"headers":[],"relativePath":"database/postgreSql/json.md","filePath":"database/postgreSql/json.md"}'),s={name:"database/postgreSql/json.md"};function c(n,t,u,p,r,q){return e(),d("div",null,[...t[0]||(t[0]=[a(`<blockquote><p><a href="https://www.postgresql.org/docs/current/datatype-json.html" target="_blank" rel="noreferrer">PostgreSQL: Documentation: 15: 8.14. JSON Types</a></p><p><a href="https://www.postgresql.org/docs/current/functions-json.html" target="_blank" rel="noreferrer">PostgreSQL: Documentation: 15: 9.16. JSON Functions and Operators</a></p></blockquote><h4 id="json-和-jsonb" tabindex="-1">json 和 jsonb <a class="header-anchor" href="#json-和-jsonb" aria-label="Permalink to &quot;json 和 jsonb&quot;">​</a></h4><p>主要区别在于 <code>json</code> 仅仅是存放了字符串，每一次处理都是处理字符串。而 <code>jsonb</code> 是把所有信息预处理成二进制数据。</p><p><code>jsonb</code>在存储是时候稍慢一点，但是在处理时会快很多。</p><h4 id="操作" tabindex="-1">操作 <a class="header-anchor" href="#操作" aria-label="Permalink to &quot;操作&quot;">​</a></h4><p>获取<code>json</code>里面数据</p><table tabindex="0"><thead><tr><th>Operator</th><th>Right Operand Type</th><th>Description</th><th>Example</th><th>Example Result</th></tr></thead><tbody><tr><td><code>-&gt;</code></td><td><code>int</code></td><td>获取指定 index 的值（0开始）</td><td><code>&#39;[{&quot;a&quot;:&quot;foo&quot;},{&quot;b&quot;:&quot;bar&quot;},{&quot;c&quot;:&quot;baz&quot;}]&#39;::json-&gt;2</code></td><td><code>{&quot;c&quot;:&quot;baz&quot;}</code></td></tr><tr><td><code>-&gt;</code></td><td><code>text</code></td><td>获取 key 对应的值</td><td><code>&#39;{&quot;a&quot;: {&quot;b&quot;:&quot;foo&quot;}}&#39;::json-&gt;&#39;a&#39;</code></td><td><code>{&quot;b&quot;:&quot;foo&quot;}</code></td></tr><tr><td><code>-&gt;&gt;</code></td><td><code>int</code></td><td>获取指定 index 的值（0开始）并转为 <code>text</code></td><td><code>&#39;[1,2,3]&#39;::json-&gt;&gt;2</code></td><td><code>3</code></td></tr><tr><td><code>-&gt;&gt;</code></td><td><code>text</code></td><td>获取指定 key 的值并转为 <code>text</code></td><td><code>&#39;{&quot;a&quot;:1,&quot;b&quot;:2}&#39;::json-&gt;&gt;&#39;b&#39;</code></td><td><code>2</code></td></tr><tr><td><code>#&gt;</code></td><td><code>text[]</code></td><td>获取指定路径的对象</td><td><code>&#39;{&quot;a&quot;: {&quot;b&quot;:{&quot;c&quot;: &quot;foo&quot;}}}&#39;::json#&gt;&#39;{a,b}&#39;</code></td><td><code>{&quot;c&quot;: &quot;foo&quot;}</code></td></tr><tr><td><code>#&gt;&gt;</code></td><td><code>text[]</code></td><td>获取指定路径的对象并转为 <code>text</code></td><td><code>&#39;{&quot;a&quot;:[1,2,3],&quot;b&quot;:[4,5,6]}&#39;::json#&gt;&gt;&#39;{a,2}&#39;</code></td><td><code>3</code></td></tr></tbody></table><p>针对与 <code>jsonb</code>的操作</p><table tabindex="0"><thead><tr><th>Operator</th><th>Right Operand Type</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><code>@&gt;</code></td><td><code>jsonb</code></td><td>左边的<code>json</code>是否在顶级包含右边的</td><td><code>&#39;{&quot;a&quot;:1, &quot;b&quot;:2}&#39;::jsonb @&gt; &#39;{&quot;b&quot;:2}&#39;::jsonb</code></td></tr><tr><td><code>&lt;@</code></td><td><code>jsonb</code></td><td>右边的<code>json</code>是否在顶级包含左边的</td><td><code>&#39;{&quot;b&quot;:2}&#39;::jsonb &lt;@ &#39;{&quot;a&quot;:1, &quot;b&quot;:2}&#39;::jsonb</code></td></tr><tr><td><code>?</code></td><td><code>text</code></td><td>是否包含顶级<code>key</code></td><td><code>&#39;{&quot;a&quot;:1, &quot;b&quot;:2}&#39;::jsonb ? &#39;b&#39;</code></td></tr><tr><td>\`?</td><td>\`</td><td><code>text[]</code></td><td>是否包含任意一个顶级<code>key</code></td></tr><tr><td><code>?&amp;</code></td><td><code>text[]</code></td><td>是否包含所有顶级<code>key</code></td><td><code>&#39;[&quot;a&quot;, &quot;b&quot;]&#39;::jsonb ?&amp; array[&#39;a&#39;, &#39;b&#39;]</code></td></tr><tr><td>\`</td><td></td><td>\`</td><td><code>jsonb</code></td></tr><tr><td><code>-</code></td><td><code>text</code></td><td>删除匹配（key/value）的数据</td><td><code>&#39;{&quot;a&quot;: &quot;b&quot;}&#39;::jsonb - &#39;a&#39;</code></td></tr><tr><td><code>-</code></td><td><code>text[]</code></td><td>删除匹配（key/value）的数据</td><td><code>&#39;{&quot;a&quot;: &quot;b&quot;, &quot;c&quot;: &quot;d&quot;}&#39;::jsonb - &#39;{a,c}&#39;::text[]</code></td></tr><tr><td><code>-</code></td><td><code>integer</code></td><td>删除指定索引位置的数据。只能对数组使用。</td><td><code>&#39;[&quot;a&quot;, &quot;b&quot;]&#39;::jsonb - 1</code></td></tr><tr><td><code>#-</code></td><td><code>text[]</code></td><td>通过路径进行删除</td><td><code>&#39;[&quot;a&quot;, {&quot;b&quot;:1}]&#39;::jsonb #- &#39;{1,b}&#39;</code></td></tr></tbody></table><h4 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-- json_agg  jsonb_agg 把某一列的值返回一个数组</span></span>
<span class="line"><span>select json_agg(key) from table</span></span></code></pre></div><h4 id="索引" tabindex="-1">索引 <a class="header-anchor" href="#索引" aria-label="Permalink to &quot;索引&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-- 创建索引</span></span>
<span class="line"><span>CREATE INDEX idxgin ON api USING GIN (jdoc);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 查询 jdoc 中有 key 为 company ，value 为 Magnafone 的数据</span></span>
<span class="line"><span>SELECT * FROM api WHERE jdoc @&gt; &#39;{&quot;company&quot;: &quot;Magnafone&quot;}&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 查询 jdoc 中有 key 为 tags ，value 中是否包含 qui </span></span>
<span class="line"><span>-- 注意不支持 GIN (jdoc) 索引。可以用 USING GIN ((jdoc -&gt; &#39;tags&#39;))</span></span>
<span class="line"><span>SELECT * FROM api WHERE jdoc -&gt; &#39;tags&#39; ? &#39;qui&#39;;</span></span>
<span class="line"><span>SELECT * FROM api WHERE jdoc @&gt; &#39;{&quot;tags&quot;: [&quot;qui&quot;]}&#39;;</span></span>
<span class="line"><span>-- 使用 jsonpath 表达式</span></span>
<span class="line"><span>SELECT * FROM api WHERE jdoc @@ &#39;$.tags[*] == &quot;qui&quot;&#39;;</span></span></code></pre></div>`,13)])])}const b=o(s,[["render",c]]);export{i as __pageData,b as default};
