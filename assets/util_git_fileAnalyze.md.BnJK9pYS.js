import{_ as a,c as i,o as t,ah as n}from"./chunks/framework.1mMYEF3_.js";const g=JSON.parse('{"title":"git 大文件分析","description":"","frontmatter":{"title":"git 大文件分析"},"headers":[],"relativePath":"util/git/fileAnalyze.md","filePath":"util/git/fileAnalyze.md"}'),e={name:"util/git/fileAnalyze.md"};function l(p,s,h,k,r,d){return t(),i("div",null,[...s[0]||(s[0]=[n(`<h2 id="查找大文件" tabindex="-1">查找大文件 <a class="header-anchor" href="#查找大文件" aria-label="Permalink to &quot;查找大文件&quot;">​</a></h2><h3 id="rev-list" tabindex="-1">rev-list <a class="header-anchor" href="#rev-list" aria-label="Permalink to &quot;rev-list&quot;">​</a></h3><p>所有文件按照大小排序</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 列出所有 blob，按字节数降序，取 Top 20</span></span>
<span class="line"><span>git rev-list --objects --all \\</span></span>
<span class="line"><span>| git cat-file --batch-check=&#39;%(objecttype) %(objectname) %(objectsize) %(rest)&#39; \\</span></span>
<span class="line"><span>| awk &#39;/^blob/ {print $3,$4}&#39; \\</span></span>
<span class="line"><span>| sort -nr \\</span></span>
<span class="line"><span>| head -20</span></span></code></pre></div><h3 id="git-filter-repo" tabindex="-1">git-filter-repo <a class="header-anchor" href="#git-filter-repo" aria-label="Permalink to &quot;git-filter-repo&quot;">​</a></h3><p>已删除的文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 让 filter-repo 只分析、不改历史</span></span>
<span class="line"><span>git filter-repo --analyze</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 报告在 .git/filter-repo/analysis/ 目录里</span></span>
<span class="line"><span>cat .git/filter-repo/analysis/path-deleted-sizes.txt | head -20</span></span></code></pre></div><h3 id="ls-tree" tabindex="-1">ls-tree <a class="header-anchor" href="#ls-tree" aria-label="Permalink to &quot;ls-tree&quot;">​</a></h3><p>当前目录里面的文件大小排序。不包含历史</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls-tree</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -20</span></span></code></pre></div><h2 id="删除文件" tabindex="-1">删除文件 <a class="header-anchor" href="#删除文件" aria-label="Permalink to &quot;删除文件&quot;">​</a></h2><p>删除已经不存在的历史文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 生成“存活路径”白名单（含子目录、含空格、含中文都能处理）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls-tree</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name-only</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/keep.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 让 filter-repo 只保留白名单里的路径，其余全部扔掉</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#    --paths-from-file 会逐行读取路径，支持 glob 模式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filter-repo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --paths-from-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/keep.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div><p>删除指定文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 一个文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filter-repo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 那个文件的路径</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --invert-paths</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除多个文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filter-repo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 那个文件的路径</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 那个文件的路径</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --invert-paths</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div>`,15)])])}const c=a(e,[["render",l]]);export{g as __pageData,c as default};
