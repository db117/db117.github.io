(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{302:function(t,a,r){"use strict";r.r(a);var s=r(10),_=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[a("a",{attrs:{href:"https://redis.io/commands/scan/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SCAN | Redis"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ul",[a("li",[t._v("如果有一个元素， 它从遍历开始直到遍历结束期间都存在于被遍历的数据集当中， 那么 "),a("code",[t._v("SCAN")]),t._v("命令总会在某次迭代中将这个元素返回给用户。")]),t._v(" "),a("li",[t._v("如果有一个元素， 它从遍历开始就已经被删除，且直到遍历结束也没有被添加回来， 那么 "),a("code",[t._v("SCAN")]),t._v("命令确保不会返回这个元素。")])]),t._v(" "),a("h4",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("ul",[a("li",[t._v("同一个元素可能会被返回多次。 处理重复元素的工作交由应用程序负责， 比如说， 可以考虑将迭代返回的元素仅仅用于可以安全地重复执行多次的操作上。")]),t._v(" "),a("li",[t._v("如果一个元素是在迭代过程中被添加到数据集的， 又或者是在迭代过程中从数据集中被删除的， 那么这个元素可能会被返回， 也可能不会， 这是未定义的（undefined）。")])]),t._v(" "),a("h3",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("返回的结果可能会有重复，需要客户端去重复，这点非常重要;")])]),t._v(" "),a("li",[a("strong",[t._v("遍历的过程中如果有数据修改，改动后的数据能不能遍历到是不确定的;")])]),t._v(" "),a("li",[a("strong",[t._v("单次返回的结果是空的并不意味着遍历结束，而要看返回的游标值是否为零;")])])]),t._v(" "),a("h3",{attrs:{id:"源码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[t._v("#")]),t._v(" 源码")]),t._v(" "),a("p",[t._v("https://github.com/redis/redis/blob/1571907ea02020a829fca63806780c6f3ecf65a0/src/dict.c#L892")]),t._v(" "),a("p",[t._v("实际上是直接获取 hash 表的槽，一个槽一个槽的返回。游标可以找到槽的位置。")]),t._v(" "),a("p",[t._v("用了一个很巧妙的算法来计算游标")]),t._v(" "),a("ul",[a("li",[t._v("在扩容时不会重复且不会漏掉数据")]),t._v(" "),a("li",[t._v("在缩容是不会漏掉数据")])])])}),[],!1,null,null,null);a.default=_.exports}}]);