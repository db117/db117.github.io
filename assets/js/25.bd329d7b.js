(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{302:function(e,s,n){"use strict";n.r(s);var _=n(10),v=Object(_.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("blockquote",[s("p",[e._v("常用的 sql 中大致执行顺序")]),e._v(" "),s("p",[e._v("每一步都生成一个虚拟的表，供后面的表使用。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("(8) SELECT (9)DISTINCT<Select_list>\n(1) FROM <left_table> (3) <join_type>JOIN<right_table>\n(2) ON<join_condition>\n(4) WHERE<where_condition>\n(5) GROUP BY<group_by_list>\n(6) WITH {CUBE|ROLLUP}\n(7) HAVING<having_condtion>\n(10) ORDER BY<order_by_list>\n(11) LIMIT<limit_number>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("ul",[s("li",[s("p",[e._v("先对 "),s("code",[e._v("from")]),e._v(" 中的两个表执行笛卡尔积，在通过 "),s("code",[e._v("on")]),e._v(" 进行筛选，并根据连接类型进行下一步操作。")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("where")]),e._v(" 对上一步产生的虚拟表，进行过滤")]),e._v(" "),s("ul",[s("li",[e._v("由于现在还没有分组，没有执行聚合函数。所以不能使用聚合函数进行个过滤。")]),e._v(" "),s("li",[e._v("由于还没有进行列的选取操作，所以还不能使用 "),s("code",[e._v("select")]),e._v(" 中列的别名")])])]),e._v(" "),s("li",[s("p",[s("code",[e._v("group by")]),e._v(" 对查询的列进行分组")]),e._v(" "),s("ul",[s("li",[e._v("从这一步开始可以使用 "),s("code",[e._v("select")]),e._v(" 中的别名")]),e._v(" "),s("li",[e._v("也可以使用数组 1，2...来表示 "),s("code",[e._v("select")]),e._v(" 中的列（从 1 开始算）")])])]),e._v(" "),s("li",[s("p",[e._v("计算聚合函数，如"),s("code",[e._v("COUNT")]),e._v("，"),s("code",[e._v("FIRST")]),e._v("，"),s("code",[e._v("AVG")]),e._v("，"),s("code",[e._v("LAST")]),e._v("，"),s("code",[e._v("MAX")]),e._v("，"),s("code",[e._v("MIN")]),e._v("，"),s("code",[e._v("SUM")]),e._v("等。")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("with")]),e._v("应用"),s("code",[e._v("ROLLUP")]),e._v("或"),s("code",[e._v("CUBE")]),e._v("，会作用在 "),s("code",[e._v("group by")]),e._v(" 中多个字段的情况下")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("ROLLUP")]),e._v("：从左往右多层次的聚合统计，相当于加上了从左到右多种组合的分组统计。")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("CUBE")]),e._v("：想当于对 group by 中的字段进行 1...n  个字段的组合进行分组")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("group 1，2，3\n\nwith ROLLUP\n相当于\ngroup by 1,2,3 + group by 1,2 +group 1\n\nwith CUBE\n相当于\ngroup by 1,2,3 +group by 1 + group by 2 + group by 3 + group by 1,2 + group by 1,3 + group by 2,3 \n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])])])])]),e._v(" "),s("li",[s("p",[s("code",[e._v("having")]),e._v(" 对分组后的数据进行筛选")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("select")]),e._v(" 把需要的列筛选出来，过滤掉不需要的列")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("distinct")]),e._v(" 把重复的数据进行剔除")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("order by")]),e._v(" 对数据进行排序")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("limit")]),e._v("：选择指定行")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);