(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{402:function(e,a,t){"use strict";t.r(a);var s=t(26),l=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"linux安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux安装"}},[e._v("#")]),e._v(" linux安装")]),e._v(" "),t("ul",[t("li",[e._v("下载\n"),t("ul",[t("li",[e._v("最新版本")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"\n')])])]),t("ul",[t("li",[e._v("指定版本")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("curl -LO https://dl.k8s.io/release/v1.20.0/bin/linux/amd64/kubectl\n")])])])]),e._v(" "),t("li",[e._v("安装"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n")])])])]),e._v(" "),t("li",[e._v("配置")])]),e._v(" "),t("blockquote",[t("p",[e._v("配置文件位置 ~/kube/config")])]),e._v(" "),t("h3",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[e._v("#")]),e._v(" 常用命令")]),e._v(" "),t("h4",{attrs:{id:"pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[e._v("#")]),e._v(" pod")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("重启")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("强制替换Pod")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl replace --force -f xxxx.yaml\n")])])])]),e._v(" "),t("li",[t("p",[e._v("调整副本来重启")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl scale deployment {deployment} --replicas=0 -n {namespace}\nkubectl scale deployment {deployment} --replicas=1 -n {namespace}\n")])])])]),e._v(" "),t("li",[t("p",[e._v("直接删除")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl delete pod {podname} -n {namespace}\n\nkubectl delete replicaset {rs_name} -n {namespace}\n")])])])]),e._v(" "),t("li",[t("p",[e._v("没有 yaml 文件，直接使用的 Pod 对象")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl get pod {podname} -n {namespace} -o yaml | kubectl replace --force -f -\n")])])])])])])]),e._v(" "),t("h4",{attrs:{id:"命名空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[e._v("#")]),e._v(" 命名空间")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("创建命名空间")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl create namespace test-env \n")])])])]),e._v(" "),t("li",[t("p",[e._v("设置默认命名空间")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl config set-context default --namespace=${work_namespace}\n")])])])])]),e._v(" "),t("h4",{attrs:{id:"secret"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#secret"}},[e._v("#")]),e._v(" Secret")]),e._v(" "),t("blockquote",[t("p",[e._v("创建docker访问secret\n需要在Deployment中指定")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("kubectl create secret docker-registry my-secret --docker-server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("spec:\n  imagePullSecrets:\n  - name: my-secret\n")])])]),t("h4",{attrs:{id:"污点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#污点"}},[e._v("#")]),e._v(" 污点")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("打上污点")])]),e._v(" "),t("blockquote",[t("p",[e._v("NoSchedule:"),t("a",{attrs:{href:"https://www.iyunw.cn/archives/tag/k8s/",target:"_blank",rel:"noopener noreferrer"}},[e._v("K8S"),t("OutboundLink")],1),e._v("node添加这个effecf类型污点，新的不能容忍的pod不能再调度过来，但是老的运行在node上不受影响")]),e._v(" "),t("p",[e._v("NoExecute：K8Snode添加这个effecf类型污点，新的不能容忍的pod不能调度过来，老的pod也会被驱逐")]),e._v(" "),t("p",[e._v("PreferNoSchedule：pod会尝试将pod分配到该节点")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("kubectl taint nodes node1 key=value:NoSchedule\n\nkubectl taint nodes node1 key=value:NoExecute\n\nkubectl taint nodes node1 key=value:PreferNoSchedule\n")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("删除污点")])]),e._v(" "),t("ul",[t("li",[t("blockquote",[t("p",[e._v("加上[-]")])])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  kubectl taint nodes node1 key=value:NoSchedule-\n\n  kubectl taint nodes node1 key=value:NoExecute-\n\n  kubectl taint nodes node1 key=value:PreferNoSchedule-\n")])])]),t("h5",{attrs:{id:"pod设置容忍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod设置容忍"}},[e._v("#")]),e._v(" "),t("strong",[e._v("pod设置容忍")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('tolerations:  #containers同级\n\n    - key: "key1"          #能容忍的污点key\n\n      operator: "Equal"    #Equal等于表示key=value ， Exists不等于，表示当值不等于下面value正常\n\n      value: "value1"      #值\n\n      effect: "NoExecute"  #effect策略，见上面\n\n      tolerationSeconds: 3600  #原始的pod多久驱逐，注意只有effect: "NoExecute"才能设置，不然报错\n')])])])])])])}),[],!1,null,null,null);a.default=l.exports}}]);