(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{351:function(s,t,a){"use strict";a.r(t);var e=a(10),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("记录一下 kubectl 常见的命令以及操作。")]),s._v(" "),t("p",[s._v("参考"),t("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/kubectl/cheatsheet/",target:"_blank",rel:"noopener noreferrer"}},[s._v("kubectl 备忘单 | Kubernetes"),t("OutboundLink")],1),s._v("，只记录经常使用的。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands",target:"_blank",rel:"noopener noreferrer"}},[s._v("Kubectl Reference Docs (kubernetes.io)"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"资源类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#资源类型"}},[s._v("#")]),s._v(" 资源类型")]),s._v(" "),t("p",[s._v("不是很清楚的资源先查一下")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl api-resources --namespaced"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 所有命名空间作用域的资源")]),s._v("\nkubectl api-resources --namespaced"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 所有非命名空间作用域的资源")]),s._v("\nkubectl api-resources -o name                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用简单格式列举所有资源（仅显示资源名称）")]),s._v("\nkubectl api-resources -o wide                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 用扩展格式列举所有资源（又称 "wide" 格式）')]),s._v("\nkubectl api-resources --verbs"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("list,get       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 支持 "list" 和 "get" 请求动词的所有资源')]),s._v("\nkubectl api-resources --api-group"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("extensions "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "extensions" API 组中的所有资源')]),s._v("\n\n\nkubectl explain pods\t\t\t\t\t\t\t\t\t\t\t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看资源定义，以及文档")]),s._v("\nkubectl explain pods.spec.containers\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"格式化输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#格式化输出"}},[s._v("#")]),s._v(" 格式化输出")]),s._v(" "),t("p",[s._v("要以特定格式将详细信息输出到终端窗口，将 "),t("code",[s._v("-o")]),s._v("（或者 "),t("code",[s._v("--output")]),s._v("）参数添加到支持的 "),t("code",[s._v("kubectl")]),s._v(" 命令中。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("输出格式")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("-o=custom-columns=<spec>")])]),s._v(" "),t("td",[s._v("使用逗号分隔的自定义列来打印表格")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-o=custom-columns-file=<filename>")])]),s._v(" "),t("td",[s._v("使用 "),t("code",[s._v("<filename>")]),s._v(" 文件中的自定义列模板打印表格")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-o=json")])]),s._v(" "),t("td",[s._v("输出 JSON 格式的 API 对象")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-o=jsonpath=<template>")])]),s._v(" "),t("td",[s._v("打印 "),t("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/kubectl/jsonpath",target:"_blank",rel:"noopener noreferrer"}},[s._v("jsonpath"),t("OutboundLink")],1),s._v(" 表达式中定义的字段")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-o=jsonpath-file=<filename>")])]),s._v(" "),t("td",[s._v("打印在 "),t("code",[s._v("<filename>")]),s._v(" 文件中定义的 "),t("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/kubectl/jsonpath",target:"_blank",rel:"noopener noreferrer"}},[s._v("jsonpath"),t("OutboundLink")],1),s._v(" 表达式所指定的字段。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-o=name")])]),s._v(" "),t("td",[s._v("仅打印资源名称而不打印其他内容")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-o=wide")])]),s._v(" "),t("td",[s._v("以纯文本格式输出额外信息，对于 Pod 来说，输出中包含了节点名称")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-o=yaml")])]),s._v(" "),t("td",[s._v("输出 YAML 格式的 API 对象")])])])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自定义列")]),s._v("\nkubectl get pods "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pod-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -o custom-columns"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NAME:.metadata.name,RSRC:.metadata.resourceVersion\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询并排序")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("TYPE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" --sort-by"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("jsonpath_exp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nkubectl get pods --sort-by"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".metadata.name\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"命名空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[s._v("#")]),s._v(" 命名空间")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 创建命名空间\nkubectl create namespace test-env \n# 设置默认命名空间\nkubectl config set-context default --namespace=${work_namespace}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"创建对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建对象"}},[s._v("#")]),s._v(" 创建对象")]),s._v(" "),t("p",[s._v("Kubernetes 配置可以用 YAML 或 JSON 定义。可以使用的文件扩展名有 "),t("code",[s._v(".yaml")]),s._v("、"),t("code",[s._v(".yml")]),s._v(" 和 "),t("code",[s._v(".json")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl apply -f ./my-manifest.yaml           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建资源")]),s._v("\nkubectl apply -f ./my1.yaml -f ./my2.yaml     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用多个文件创建")]),s._v("\nkubectl apply -f ./dir                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基于目录下的所有清单文件创建资源")]),s._v("\nkubectl apply -f https://git.io/vPieo         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从 URL 中创建资源")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个打印 “Hello World” 的 Job")]),s._v("\nkubectl create job hello --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("busybox -- "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),s._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个打印 “Hello World” 间隔1分钟的 CronJob")]),s._v("\nkubectl create cronjob hello --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("busybox   --schedule"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*/1 * * * *"')]),s._v(" -- "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),s._v("    \n\nkubectl explain pods                          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取 pod 清单的文档说明")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"查看和查找资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看和查找资源"}},[s._v("#")]),s._v(" 查看和查找资源")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get 命令的基本输出")]),s._v("\nkubectl get services                          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出当前命名空间下的所有 services")]),s._v("\nkubectl get pods --all-namespaces             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有命名空间下的全部的 Pods")]),s._v("\nkubectl get pods -o wide                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出当前命名空间下的全部 Pods，并显示更详细的信息")]),s._v("\nkubectl get deployment my-dep                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出某个特定的 Deployment")]),s._v("\nkubectl get pods                              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出当前命名空间下的全部 Pods")]),s._v("\nkubectl get pod my-pod -o yaml                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取一个 pod 的 YAML")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# describe 命令的详细输出")]),s._v("\nkubectl describe nodes my-node\nkubectl describe pods my-pod\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出当前名字空间下所有 Services，按名称排序")]),s._v("\nkubectl get services --sort-by"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".metadata.name\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出 Pods，按重启次数排序")]),s._v("\nkubectl get pods --sort-by"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.status.containerStatuses[0].restartCount'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列举所有 PV 持久卷，按容量排序")]),s._v("\nkubectl get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pv")]),s._v(" --sort-by"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".spec.capacity.storage\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取包含 app=cassandra 标签的所有 Pods 的 version 标签")]),s._v("\nkubectl get pods --selector"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("app"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cassandra -o "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{.items[*].metadata.labels.version}'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检索带有 “.” 键值，例： 'ca.crt'")]),s._v("\nkubectl get configmap myconfig "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -o "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{.data.ca\\.crt}'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取所有工作节点（使用选择器以排除标签名称为 'node-role.kubernetes.io/master' 的结果）")]),s._v("\nkubectl get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" --selector"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!node-role.kubernetes.io/master'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取当前命名空间中正在运行的 Pods")]),s._v("\nkubectl get pods --field-selector"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("status.phase"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Running\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取全部节点的 ExternalIP 地址")]),s._v("\nkubectl get nodes -o "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{.items[*].status.addresses[?(@.type==\"ExternalIP\")].address}'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有 Pods 的标签（或任何其他支持标签的 Kubernetes 对象）")]),s._v("\nkubectl get pods --show-labels\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查哪些节点处于就绪状态")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JSONPATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" kubectl get nodes -o "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JSONPATH")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ready=True"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不使用外部工具来输出解码后的 Secret")]),s._v("\nkubectl get secret my-secret -o go-template"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{{range $k,$v := .data}}{{"### "}}{{$k}}{{"\\n"}}{{$v|base64decode}}{{"\\n\\n"}}{{end}}\'')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出被一个 Pod 使用的全部 Secret")]),s._v("\nkubectl get pods -o json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.items[].spec.containers[].env[]?.valueFrom.secretKeyRef.name'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v null "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列举所有 Pods 中初始化容器的容器 ID（containerID）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可用于在清理已停止的容器时避免删除初始化容器")]),s._v("\nkubectl get pods --all-namespaces -o "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{range .items[*].status.initContainerStatuses[*]}{.containerID}{\"\\n\"}{end}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d/ -f3\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出事件（Events），按时间戳排序")]),s._v("\nkubectl get events --sort-by"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(".metadata.creationTimestamp\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比较当前的集群状态和假定某清单被应用之后的集群状态")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" -f ./my-manifest.yaml\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成一个句点分隔的树，其中包含为节点返回的所有键")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在复杂的嵌套JSON结构中定位键时非常有用")]),s._v("\nkubectl get nodes -o json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq -c "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'path(..)|[.[]|tostring]|join(\".\")'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成一个句点分隔的树，其中包含为pod等返回的所有键")]),s._v("\nkubectl get pods -o json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq -c "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'path(..)|[.[]|tostring]|join(\".\")'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br")])]),t("h2",{attrs:{id:"更新资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新资源"}},[s._v("#")]),s._v(" 更新资源")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 升级")]),s._v("\nkubectl rollout "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" deployment/frontend                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查 Deployment 的历史记录，包括版本")]),s._v("\nkubectl rollout undo deployment/frontend                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚到上次部署版本")]),s._v("\nkubectl rollout undo deployment/frontend --to-revision"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚到特定部署版本")]),s._v("\nkubectl rollout status -w deployment/frontend                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 监视 "frontend" Deployment 的滚动升级状态直到完成')]),s._v("\nkubectl rollout restart deployment/frontend                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 轮替重启 "frontend" Deployment')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制替换，删除后重建资源。会导致服务不可用。")]),s._v("\nkubectl replace --force -f ./pod.json\n\n\nkubectl label pods my-pod new-label"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("awesome                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加标签")]),s._v("\nkubectl annotate pods my-pod icon-url"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://goo.gl/XXBTWq       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加注解")]),s._v("\nkubectl autoscale deployment foo --min"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" --max"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 对 "foo" Deployment 自动伸缩容')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"对资源进行伸缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对资源进行伸缩"}},[s._v("#")]),s._v(" 对资源进行伸缩")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl scale --replicas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" rs/foo                                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将名为 'foo' 的副本集伸缩到 3 副本")]),s._v("\nkubectl scale --replicas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" -f foo.yaml                            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 将在 "foo.yaml" 中的特定资源伸缩到 3 个副本')]),s._v("\nkubectl scale --current-replicas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" --replicas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" deployment/mysql  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果名为 mysql 的 Deployment 的副本当前是 2，那么将它伸缩到 3")]),s._v("\nkubectl scale --replicas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" rc/foo rc/bar rc/baz                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 伸缩多个副本控制器")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"删除资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除资源"}},[s._v("#")]),s._v(" 删除资源")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl delete -f ./pod.json                                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除在 pod.json 中指定的类型和名称的 Pod")]),s._v("\nkubectl delete pod,service baz foo                           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 删除名称为 "baz" 和 "foo" 的 Pod 和服务')]),s._v("\nkubectl delete pods,services -l "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("myLabel                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除包含 name=myLabel 标签的 pods 和服务")]),s._v("\nkubectl -n my-ns delete pod,svc --all                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除在 my-ns 名字空间中全部的 Pods 和服务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有与 pattern1 或 pattern2 awk 模式匹配的 Pods")]),s._v("\nkubectl get pods  -n mynamespace --no-headers"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/pattern1|pattern2/{print $1}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v("  kubectl delete -n mynamespace pod\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"查看日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看日志"}},[s._v("#")]),s._v(" 查看日志")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("kubectl logs my-pod                                 # 获取 pod 日志（标准输出）\nkubectl logs -l name=myLabel                        # 获取含 name=myLabel 标签的 Pods 的日志（标准输出）\nkubectl logs my-pod --previous                      # 获取上个容器实例的 pod 日志（标准输出）\nkubectl logs my-pod -c my-container                 # 获取 Pod 容器的日志（标准输出, 多容器场景）\nkubectl logs -l name=myLabel -c my-container        # 获取含 name=myLabel 标签的 Pod 容器日志（标准输出, 多容器场景）\nkubectl logs my-pod -c my-container --previous      # 获取 Pod 中某容器的上个实例的日志（标准输出, 多容器场景）\nkubectl logs -f my-pod                              # 流式输出 Pod 的日志（标准输出）\nkubectl logs -f my-pod -c my-container              # 流式输出 Pod 容器的日志（标准输出, 多容器场景）\nkubectl logs -f -l name=myLabel --all-containers    # 流式输出含 name=myLabel 标签的 Pod 的所有日志（标准输出）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"与运行中的-pods-进行交互"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与运行中的-pods-进行交互"}},[s._v("#")]),s._v(" 与运行中的 Pods 进行交互")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl attach my-pod -i                            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂接到一个运行的容器中")]),s._v("\nkubectl port-forward my-pod "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":6000               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在本地计算机上侦听端口 5000 并转发到 my-pod 上的端口 6000")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" my-pod -- "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在已有的 Pod 中运行命令（单容器场景）")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --stdin --tty my-pod -- /bin/sh        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用交互 shell 访问正在运行的 Pod (一个容器场景)")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" my-pod -c my-container -- "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在已有的 Pod 中运行命令（多容器场景）")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" pod POD_NAME --containers               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示给定 Pod 和其中容器的监控数据")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" pod POD_NAME --sort-by"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cpu              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示给定 Pod 的指标并且按照 'cpu' 或者 'memory' 排序")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"节点和集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点和集群"}},[s._v("#")]),s._v(" 节点和集群")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("kubectl cordon my-node                               # 标记 my-node 节点为不可调度\nkubectl drain my-node                                # 对 my-node 节点进行清空操作，为节点维护做准备\nkubectl uncordon my-node                             # 标记 my-node 节点为可以调度\nkubectl top node my-node                             # 显示给定节点的度量值\nkubectl cluster-info                                 # 显示主控节点和服务的地址\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);