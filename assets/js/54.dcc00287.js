(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{419:function(s,e,t){"use strict";t.r(e);var n=t(27),v=Object(n.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[s._v("#")]),s._v(" 说明")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("grep 更适合单纯的查找或匹配文本")]),s._v(" "),t("li",[s._v("sed 更适合编辑匹配到的文本")]),s._v(" "),t("li",[s._v("awk 更适合格式化文本，对文本进行较复杂格式处理")])])]),s._v(" "),t("h2",{attrs:{id:"grep"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" grep")]),s._v(" "),t("p",[s._v("参数")]),s._v(" "),t("blockquote",[t("ul",[t("li",[t("strong",[s._v("-a 或 --text")]),s._v(" : 不要忽略二进制的数据。")]),s._v(" "),t("li",[t("strong",[s._v("-A<显示行数> 或 --after-context=<显示行数>")]),s._v(" : 除了显示符合范本样式的那一列之外，并显示该行之后的内容。")]),s._v(" "),t("li",[t("strong",[s._v("-b 或 --byte-offset")]),s._v(" : 在显示符合样式的那一行之前，标示出该行第一个字符的编号。")]),s._v(" "),t("li",[t("strong",[s._v("-B<显示行数> 或 --before-context=<显示行数>")]),s._v(" : 除了显示符合样式的那一行之外，并显示该行之前的内容。")]),s._v(" "),t("li",[t("strong",[s._v("-c 或 --count")]),s._v(" : 计算符合样式的列数。")]),s._v(" "),t("li",[t("strong",[s._v("-C<显示行数> 或 --context=<显示行数>或-<显示行数>")]),s._v(" : 除了显示符合样式的那一行之外，并显示该行之前后的内容。")]),s._v(" "),t("li",[t("strong",[s._v("-d <动作> 或 --directories=<动作>")]),s._v(" : 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。")]),s._v(" "),t("li",[t("strong",[s._v("-e<范本样式> 或 --regexp=<范本样式>")]),s._v(" : 指定字符串做为查找文件内容的样式。")]),s._v(" "),t("li",[t("strong",[s._v("-E 或 --extended-regexp")]),s._v(" : 将样式为延伸的正则表达式来使用。")]),s._v(" "),t("li",[t("strong",[s._v("-f<规则文件> 或 --file=<规则文件>")]),s._v(" : 指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。")]),s._v(" "),t("li",[t("strong",[s._v("-F 或 --fixed-regexp")]),s._v(" : 将样式视为固定字符串的列表。")]),s._v(" "),t("li",[t("strong",[s._v("-G 或 --basic-regexp")]),s._v(" : 将样式视为普通的表示法来使用。")]),s._v(" "),t("li",[t("strong",[s._v("-h 或 --no-filename")]),s._v(" : 在显示符合样式的那一行之前，不标示该行所属的文件名称。")]),s._v(" "),t("li",[t("strong",[s._v("-H 或 --with-filename")]),s._v(" : 在显示符合样式的那一行之前，表示该行所属的文件名称。")]),s._v(" "),t("li",[t("strong",[s._v("-i 或 --ignore-case")]),s._v(" : 忽略字符大小写的差别。")]),s._v(" "),t("li",[t("strong",[s._v("-l 或 --file-with-matches")]),s._v(" : 列出文件内容符合指定的样式的文件名称。")]),s._v(" "),t("li",[t("strong",[s._v("-L 或 --files-without-match")]),s._v(" : 列出文件内容不符合指定的样式的文件名称。")]),s._v(" "),t("li",[t("strong",[s._v("-n 或 --line-number")]),s._v(" : 在显示符合样式的那一行之前，标示出该行的列数编号。")]),s._v(" "),t("li",[t("strong",[s._v("-o 或 --only-matching")]),s._v(" : 只显示匹配PATTERN 部分。")]),s._v(" "),t("li",[t("strong",[s._v("-q 或 --quiet或--silent")]),s._v(" : 不显示任何信息。")]),s._v(" "),t("li",[t("strong",[s._v("-r 或 --recursive")]),s._v(' : 此参数的效果和指定"-d recurse"参数相同。')]),s._v(" "),t("li",[t("strong",[s._v("-s 或 --no-messages")]),s._v(" : 不显示错误信息。")]),s._v(" "),t("li",[t("strong",[s._v("-v 或 --invert-match")]),s._v(" : 显示不包含匹配文本的所有行。")]),s._v(" "),t("li",[t("strong",[s._v("-V 或 --version")]),s._v(" : 显示版本信息。")]),s._v(" "),t("li",[t("strong",[s._v("-w 或 --word-regexp")]),s._v(" : 只显示全字符合的列。")]),s._v(" "),t("li",[t("strong",[s._v("-x --line-regexp")]),s._v(" : 只显示全列符合的列。")]),s._v(" "),t("li",[t("strong",[s._v("-y")]),s._v(' : 此参数的效果和指定"-i"参数相同。')])])]),s._v(" "),t("p",[s._v("实例")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行\ngrep test *file \n\n# 查找前缀有 test 的文件包含 test 字符串的文件  \ngrep test test*\n\n# 以递归的方式查找 etc/acpi 下包含 update 的文件  \ngrep -r update /etc/acpi \n\n# 查找文件名中包含 test 的文件中不包含 test 的行\ngrep -v test *test*\n\n# 查询包含INFO的行,以及其前后7行\ngrep -A 7 -B 7 'INFO' demo.log\n\n# 输出文件demo.log中查找所有包行ERROR的行的数\ngrep -c 'ERROR' demo.log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h2",{attrs:{id:"sed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[s._v("#")]),s._v(" sed")]),s._v(" "),t("p",[s._v("参数:")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("-e"),t("script")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);