(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{425:function(e,v,_){"use strict";_.r(v);var o=_(31),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h3",{attrs:{id:"线程池流程图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#线程池流程图"}},[e._v("#")]),e._v(" 线程池流程图")]),e._v(" "),_("iframe",{staticStyle:{display:"block",width:"725px",height:"245px"},attrs:{id:"embed_dom",name:"embed_dom",frameborder:"0",src:"https://www.processon.com/embed/619f50e40e3e743d103b520d"}}),e._v(" "),_("h3",{attrs:{id:"关键属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关键属性"}},[e._v("#")]),e._v(" 关键属性")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("ctl")]),e._v(" "),_("blockquote",[_("p",[e._v("使用高 2 位保存线程池运行状态，低 29 为保存运行线程数")])])]),e._v(" "),_("li",[_("p",[e._v("workQueue")]),e._v(" "),_("blockquote",[_("p",[e._v("工作队列，保存需要运行的线程")])])]),e._v(" "),_("li",[_("p",[e._v("mainLock")]),e._v(" "),_("blockquote",[_("p",[e._v("主锁，在修改一下核心属性是需要持有该锁")])])]),e._v(" "),_("li",[_("p",[e._v("largestPoolSize")]),e._v(" "),_("blockquote",[_("p",[e._v("达到的最大线程数量，访问需要持有 "),_("code",[e._v("mainLock")])])])]),e._v(" "),_("li",[_("p",[e._v("completedTaskCount")]),e._v(" "),_("blockquote",[_("p",[e._v("完成任务的计数器。访问需要持有 "),_("code",[e._v("mainLock")])])])]),e._v(" "),_("li",[_("p",[e._v("threadFactory")]),e._v(" "),_("blockquote",[_("p",[e._v("线程工厂")])])]),e._v(" "),_("li",[_("p",[e._v("handler")]),e._v(" "),_("blockquote",[_("p",[e._v("添加任务失败，或者强制结束线程是调用")])])]),e._v(" "),_("li",[_("p",[e._v("keepAliveTime")]),e._v(" "),_("blockquote",[_("p",[e._v("工作线程允许空闲时间")])])]),e._v(" "),_("li",[_("p",[e._v("allowCoreThreadTimeOut")]),e._v(" "),_("blockquote",[_("p",[e._v("是否允许核心线程超时，默认 false")])])]),e._v(" "),_("li",[_("p",[e._v("corePoolSize")]),e._v(" "),_("blockquote",[_("p",[e._v("核心线程数量")])])]),e._v(" "),_("li",[_("p",[e._v("maximumPoolSize")]),e._v(" "),_("blockquote",[_("p",[e._v("最大线程数量")])])])]),e._v(" "),_("h3",{attrs:{id:"常用方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[e._v("#")]),e._v(" 常用方法")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("shutdown")]),e._v(" "),_("blockquote",[_("p",[e._v("结束线程池，但会执行完已提交的任务。不会接收新任务。")])])]),e._v(" "),_("li",[_("p",[e._v("shutdownNow")]),e._v(" "),_("blockquote",[_("p",[e._v("结束线程池，不会执行队列中的任务。并对所有工作线程进行中断。")])])]),e._v(" "),_("li",[_("p",[e._v("allowCoreThreadTimeOut")]),e._v(" "),_("blockquote",[_("p",[e._v("设置是否允许核心线程超时关闭")])])]),e._v(" "),_("li",[_("p",[e._v("getActiveCount")]),e._v(" "),_("blockquote",[_("p",[e._v("获取工作线程数量")])])]),e._v(" "),_("li",[_("p",[e._v("getLargestPoolSize")]),e._v(" "),_("blockquote",[_("p",[e._v("获取最大的工作线程数量")])])]),e._v(" "),_("li",[_("p",[e._v("getTaskCount")]),e._v(" "),_("blockquote",[_("p",[e._v("获取执行的任务数量，包括执行中的。是一个近似值。")])])]),e._v(" "),_("li",[_("p",[e._v("getCompletedTaskCount")]),e._v(" "),_("blockquote",[_("p",[e._v("获取已完成的任务数量。不包含运行中的。也是一个近似值。")])])]),e._v(" "),_("li",[_("p",[e._v("beforeExecute")]),e._v(" "),_("blockquote",[_("p",[e._v("每一个任务执行前调用的方法，可以通过子类实现。")])])]),e._v(" "),_("li",[_("p",[e._v("afterExecute")]),e._v(" "),_("blockquote",[_("p",[e._v("每一个任务执行后调用的方法，可以通过子类实现。")])])]),e._v(" "),_("li",[_("p",[e._v("prestartAllCoreThreads")]),e._v(" "),_("blockquote",[_("p",[e._v("启动所有核心线程")])])]),e._v(" "),_("li",[_("p",[e._v("prestartCoreThread")]),e._v(" "),_("blockquote",[_("p",[e._v("启动一个核心线程")])])]),e._v(" "),_("li",[_("p",[e._v("ensurePrestart")]),e._v(" "),_("blockquote",[_("p",[e._v("和"),_("code",[e._v("prestartCoreThread")]),e._v("一样，不过核心线程数为 0 是也会启动一个线程。")])])]),e._v(" "),_("li",[_("p",[e._v("purge")]),e._v(" "),_("blockquote",[_("p",[e._v("取消掉所有以结束的任务")])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);