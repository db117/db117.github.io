(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{447:function(t,n,e){"use strict";e.r(n);var s=e(26),a=Object(s.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h3",{attrs:{id:"收集k8s日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#收集k8s日志"}},[this._v("#")]),this._v(" 收集k8s日志")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('\t\tfilebeat.inputs:\n    - type: container\n      exclude_lines: [\'^DBG\']   #屏蔽空字符串\n      paths:\n        - /var/log/containers/*.log\n      processors:\n        - add_kubernetes_metadata:\n            host: ${NODE_NAME}\n            matchers:\n            - logs_path:\n                logs_path: "/var/log/containers/"\n        # 删除一下乱七八糟的字段\n        - drop_fields:\n            fields: ["container", "ecs","beat","host","input","source","offset"]\n              \n        # 只收集 hillinsight 命名空间下的日志\n        - drop_event:\n              when:\n                not:\n                  contains:\n                    kubernetes.namespace: "hillinsight"\n   \n      multiline:\n          pattern: \'^\\s*(\\d{4}|\\d{2})\\-(\\d{2}|[a-zA-Z]{3})\\-(\\d{2}|\\d{4})\'   # 指定匹配的表达式（匹配以 2017-11-15 08:04:23:889 时间格式开头的字符串）\n          negate: true                                # 是否匹配到\n          match: after                                # 合并到上一行的末尾, 为了error日志\n          max_lines: 1000                             # 最大的行数\n          timeout: 30s                                # 如果在规定的时候没有新的日志事件就不等待后面的日志\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);