(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{415:function(e,a,t){"use strict";t.r(a);var r=t(25),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"jdk动态配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk动态配置"}},[e._v("#")]),e._v(" jdk动态配置")]),e._v(" "),t("blockquote",[t("p",[e._v("根据需要动态配置jdk")]),e._v(" "),t("p",[e._v("需要先把jdk文件解压到mac默认的文件夹下（/Library/Java/JavaVirtualMachines）")]),e._v(" "),t("p",[e._v("/usr/libexec/java_home -v <版本号> 是打印指定版本号绝对路径")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# jdk设置\n# 注意下面的引号` （不是单引号\'，是Esc键下面的 与~符号同键的那个符号）  \n# 设置 JDK 8  \nexport JAVA_8_HOME=`/usr/libexec/java_home -v 1.8`  \n# 设置 JDK 11 \nexport JAVA_11_HOME=`/usr/libexec/java_home -v 11`\n# 设置 JDK 15 \nexport JAVA_15_HOME=`/usr/libexec/java_home -v 15`\n\n#默认JDK 11  \nexport JAVA_HOME=$JAVA_11_HOME  \n  \n#alias命令动态切换JDK版本  \nalias jdk8="export JAVA_HOME=$JAVA_8_HOME"  \nalias jdk11="export JAVA_HOME=$JAVA_11_HOME"\nalias jdk15="export JAVA_HOME=$JAVA_15_HOME"\n')])])]),t("h3",{attrs:{id:"homebrew"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homebrew"}},[e._v("#")]),e._v(" Homebrew")]),e._v(" "),t("blockquote",[t("p",[e._v("软件包的管理器")])]),e._v(" "),t("h4",{attrs:{id:"homebrew-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homebrew-2"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Homebrew"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"\n')])])])])}),[],!1,null,null,null);a.default=s.exports}}]);