(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{372:function(t,s,a){"use strict";a.r(s);var e=a(10),v=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"基础操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础操作"}},[t._v("#")]),t._v(" 基础操作")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Prometheus的查询表达式可以分为四种数据类型：")]),t._v(" "),s("strong",[t._v("instant vector")]),t._v(" 瞬时向量 - 它是指在同一时刻，抓取的所有度量指标数据。这些度量指标数据的key都是相同的，也即相同的时间戳；\n"),s("strong",[t._v("range vector")]),t._v(" 范围向量 - 它是指在任何一个时间范围内，抓取的所有度量指标数据；\n"),s("strong",[t._v("scalar")]),t._v(" 标量 - 一个简单的浮点值，标量浮点值可以直接写成形式；\n"),s("strong",[t._v("string")]),t._v(" 字符串 - 字符串可以用单引号、双引号或者反引号表示；")])]),t._v(" "),s("h3",{attrs:{id:"浮点文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点文本"}},[t._v("#")]),t._v(" 浮点文本")]),t._v(" "),s("blockquote",[s("p",[t._v("标量浮点值可以以文字整数或浮点数的格式写入")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[-+]?(\n      [0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?\n    | 0[xX][0-9a-fA-F]+\n    | [nN][aA][nN]\n    | [iI][nN][fF]\n)\n\n23\n-2.43\n3.4e-9\n0x8f\n-Inf\nNaN\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h4",{attrs:{id:"即时矢量选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#即时矢量选择器"}},[t._v("#")]),t._v(" 即时矢量选择器")]),t._v(" "),s("blockquote",[s("p",[t._v("即时向量选择器允许在给定的时间戳(即时)选择一组时间序列和每个时间戳的单个样本值: 在最简单的形式中，只指定一个指标名称。这将生成一个即时向量，其中包含具有此度量名称的所有时间序列的元素。")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('kube_pod_info{job="prometheus"}\n# 选择标签 job="prometheus" name="kube_pod_info" 的数据\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("标签匹配符：")]),t._v(" "),s("ul",[s("li",[t._v("=: 精确地匹配标签给定的值")]),t._v(" "),s("li",[t._v("!=: 不等于给定的标签值")]),t._v(" "),s("li",[t._v("=~: 选择匹配正则表达式的标签(或子标签)")]),t._v(" "),s("li",[t._v("!~: 选择不匹配正则表达式的标签(或子标签)")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 选择了度量指标名称以jvm_开头的时间序列数据\n{__name__ =~"jvm_.*"} \n\n# 选择给定环境的数据\njvm_classes_loaded{environment=~"staging|testing|development"}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h4",{attrs:{id:"范围向量选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范围向量选择"}},[t._v("#")]),t._v(" 范围向量选择")]),t._v(" "),s("p",[t._v("时间范围")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("code",[t._v("ms")]),t._v(" - 毫秒")]),t._v(" "),s("li",[s("code",[t._v("s")]),t._v(" - 秒")]),t._v(" "),s("li",[s("code",[t._v("m")]),t._v(" - 分")]),t._v(" "),s("li",[s("code",[t._v("h")]),t._v(" - 时")]),t._v(" "),s("li",[s("code",[t._v("d")]),t._v(" - 天")]),t._v(" "),s("li",[s("code",[t._v("w")]),t._v(" - 周")]),t._v(" "),s("li",[s("code",[t._v("y")]),t._v(" -年(365天)")])])]),t._v(" "),s("p",[t._v("实例")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 选择过去 5 分钟内，度量指标名称为 http_requests_total， 标签为 job="prometheus" 的时间序列数据\nhttp_requests_total{job="prometheus"}[5m]\n\n# 相对于当前时间的前 5 分钟时的时刻, 度量指标名称为 http_requests_total 的时间序列数据\nhttp_requests_total offset 5m\n\n# 相对于当前时间的前一周时，过去 5 分钟的度量指标名称为 http_requests_total 的速率\nrate(http_requests_total[5m] offset 1w)\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h2",{attrs:{id:"操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[t._v("#")]),t._v(" 操作符")]),t._v(" "),s("h3",{attrs:{id:"数学运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数学运算符"}},[t._v("#")]),t._v(" 数学运算符")]),t._v(" "),s("p",[t._v("支持的所有数学运算符如下所示：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("+")]),t._v("(加法)")]),t._v(" "),s("li",[s("code",[t._v("-")]),t._v(" (减法)")]),t._v(" "),s("li",[s("code",[t._v("*")]),t._v("(乘法)")]),t._v(" "),s("li",[s("code",[t._v("/")]),t._v(" (除法)")]),t._v(" "),s("li",[s("code",[t._v("%")]),t._v("(求余)")]),t._v(" "),s("li",[s("code",[t._v("^")]),t._v(" (幂运算)")])]),t._v(" "),s("h3",{attrs:{id:"布尔运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔运算符"}},[t._v("#")]),t._v(" 布尔运算符")]),t._v(" "),s("p",[t._v("目前，Prometheus支持以下布尔运算符如下：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("==")]),t._v(" (相等)")]),t._v(" "),s("li",[s("code",[t._v("!=")]),t._v(" (不相等)")]),t._v(" "),s("li",[s("code",[t._v(">")]),t._v(" (大于)")]),t._v(" "),s("li",[s("code",[t._v("<")]),t._v(" (小于)")]),t._v(" "),s("li",[s("code",[t._v(">=")]),t._v(" (大于等于)")]),t._v(" "),s("li",[s("code",[t._v("<=")]),t._v(" (小于)")])]),t._v(" "),s("h3",{attrs:{id:"聚合函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[t._v("#")]),t._v(" 聚合函数")]),t._v(" "),s("ul",[s("li",[t._v("sum：求和。")]),t._v(" "),s("li",[t._v("min：最小值。")]),t._v(" "),s("li",[t._v("max：最大值")]),t._v(" "),s("li",[t._v("avg：平均值")]),t._v(" "),s("li",[t._v("stddev：标准差")]),t._v(" "),s("li",[t._v("stdvar：方差")]),t._v(" "),s("li",[t._v("count：元素个数")]),t._v(" "),s("li",[t._v("count_values：等于某值的元素个数")]),t._v(" "),s("li",[t._v("bottomk：最小的 k 个元素")]),t._v(" "),s("li",[t._v("topk：最大的 k 个元素")]),t._v(" "),s("li",[t._v("quantile：分位数")])]),t._v(" "),s("blockquote",[s("p",[t._v("可以在表达式前后添加 "),s("code",[t._v("without")]),t._v(" "),s("code",[t._v("by")])]),t._v(" "),s("p",[t._v("without: 删除掉某个标签后进行聚合计算")]),t._v(" "),s("p",[t._v("by 根据某些个标签进行聚合计算")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http_requests_total{instance,application, group}\n# 根据 application, group 分组统计总数\nsum without (instance) (http_requests_total)\n# 与上面相同\nsum by (application, group) (http_requests_total)\n\n# 根据所有标签进行分组\nsum(http_requests_total)\n\n# 得到所有实例中最大的 5 个 HTTP 请求数\ntopk(5, http_requests_total)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h2",{attrs:{id:"内置函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置函数"}},[t._v("#")]),t._v(" 内置函数")]),t._v(" "),s("p",[t._v("瞬时向量")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("instant-vector abs(instant-vector)：绝对值")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector sqrt(instant-vector))：平方根")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector exp(instant-vector )：指数计算")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector ln(instant-vector )：自然对数")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector ceil(instant-vector )：向上取整")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector floor(instant-vector )：向下取整")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector round(instant-vector )：四舍五入取整")])]),t._v(" "),s("li",[s("p",[t._v("absent(v instant-vector):")]),t._v(" "),s("blockquote",[s("p",[t._v("有值返回 空向量")]),t._v(" "),s("p",[t._v("没有值，则返回标签名称的时间序列 并返回值为1")])])]),t._v(" "),s("li",[s("p",[t._v("clamp(v instant-vector, min scalar, max scalar)")]),t._v(" "),s("blockquote",[s("p",[t._v("使瞬时向量在设定的区间内,即小于最小值取最小值 大于最大值取最大值")])])]),t._v(" "),s("li",[s("p",[t._v("clamp_max(): 同clamp")])]),t._v(" "),s("li",[s("p",[t._v("clamp_min(): 同clamp")])])]),t._v(" "),s("p",[t._v("范围向量")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("instant-vector delta(range-vector)：计算区间向量里最大最小的差值")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector increase(range-vector)：计算区间向量里最后一个值和第一个值的差值")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector rate(range-vector)：计算区间向量里的平均增长率")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector irate(range-vector)：计算区间向量里的瞬时增长率")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector avg_over_time(range-vector)：指定间隔内所有点的平均值。")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector min_over_time(range-vector)：指定间隔中所有点的最小值。")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector max_over_time(range-vector)：指定间隔内所有点的最大值。")])]),t._v(" "),s("li",[s("p",[t._v("instant-vector sum_over_time(range-vector)：指定时间间隔内所有值的总和。")])]),t._v(" "),s("li",[s("p",[t._v("absent_over_time(v range-vector)")]),t._v(" "),s("blockquote",[s("p",[t._v("与absent类型,不过入参是范围向量")])])]),t._v(" "),s("li",[s("p",[t._v("instant-vector changes(v range-vector):  返回这个区间向量内每个样本数据值变化的次数")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);