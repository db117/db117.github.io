(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{531:function(t,a,s){"use strict";s.r(a);var n=s(34),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"java-agent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-agent"}},[t._v("#")]),t._v(" Java agent")]),t._v(" "),s("blockquote",[s("p",[t._v("Java 客户端,搜集各种数据发送到服务端。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/apache/skywalking-java",target:"_blank",rel:"noopener noreferrer"}},[t._v("apache/skywalking-java: The Java agent for Apache SkyWalking (github.com)"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├── apm-application-toolkit  \t\t\t\t一些工具类，仅仅是接口，具体实现在 apm-toolkit-activation 中\n├── apm-protocol\t\t\t\t\t\t\t\t\t\tProtocol协议定义了各种数据格式，以及通信格式等\n├── apm-sniffer\t\t\t\t\t\t\t\t\t\t\t核心代码\n│   ├── apm-agent\t\t\t\t\t\t\t\t\t\t插件入口\n│   ├── apm-agent-core\t\t\t\t\t\t\t核心代码\n│   ├── apm-sdk-plugin\t\t\t\t\t\t\t所有插件的父项目，以及大部分插件\n│   ├── apm-test-tools\t\t\t\t\t\t\t\n│   ├── apm-toolkit-activation\t\t\tapm-application-toolkit 的具体实现\n│   ├── bootstrap-plugins\n│   ├── config\n│   ├── optional-plugins\n│   ├── optional-reporter-plugins\n├── changes\t\t\t\t\t\t\t\t\t\t\t\t\t变更记录\n├── docs\t\t\t\t\t\t\t\t\t\t\t\t\t\t文档\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h4",{attrs:{id:"流程图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程图"}},[t._v("#")]),t._v(" 流程图")]),t._v(" "),s("iframe",{staticStyle:{display:"block",width:"725px",height:"245px"},attrs:{id:"embed_dom",name:"embed_dom",frameborder:"0",src:"https://www.processon.com/embed/621347b66376897c8c8308a3"}}),t._v(" "),s("h4",{attrs:{id:"主要类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要类"}},[t._v("#")]),t._v(" 主要类")]),t._v(" "),s("ul",[s("li",[t._v("org.apache.skywalking.apm.agent.core.conf.Config")])]),t._v(" "),s("blockquote",[s("p",[t._v("​\t所有配置都在这个类中。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);