(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{288:function(n,s,a){"use strict";a.r(s);var t=a(10),e=Object(t.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h3",{attrs:{id:"蓄水池抽样算法-reservoir-sampling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#蓄水池抽样算法-reservoir-sampling"}},[n._v("#")]),n._v(" 蓄水池抽样算法（Reservoir Sampling）")]),n._v(" "),s("blockquote",[s("p",[s("strong",[n._v("给定一个数据流，数据流长度N很大，且N直到处理完所有数据之前都不可知，请问如何在只遍历一遍数据（O(N)）的情况下，能够随机选取出K个不重复的数据。")])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("int[] result = new int[K];\nfor (int i = 0; i < K; i++) { // 前 K 个元素直接放入数组中\n \tresult[i] = pool[i];\n}\n\nfor (int i = K; i < N; i++) { // K + 1 个元素开始进行概率采样\n  int r = random.nextInt(i + 1);\n  if (r < K) {\n \t result[r] = pool[i];\n  }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br")])]),s("h3",{attrs:{id:"最大公约数-最小公倍数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最大公约数-最小公倍数"}},[n._v("#")]),n._v(" 最大公约数，最小公倍数")]),n._v(" "),s("blockquote",[s("p",[n._v("求最小公倍数需要最大公约数")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 最小公倍数\nprivate long lcm(long a, long b) {\n\treturn a * b / gcd(a, b);\n}\n    \n// 最大公约数\nprivate long gcd(long x, long y) {\n  if (x == 0) return y;\n  return gcd(y % x, x);\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("h3",{attrs:{id:"枚举二进制子集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举二进制子集"}},[n._v("#")]),n._v(" 枚举二进制子集")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// m => 总状态数\nfor (int i = 1; i < m; i++) {\n    // 枚举状态 i 的二进制子集\n    for (int j = i; j > 0; j = (j - 1) & i) {\n        // To Do..\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])]),s("h3",{attrs:{id:"最长上升子序列-longest-increasing-subsequence"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最长上升子序列-longest-increasing-subsequence"}},[n._v("#")]),n._v(" 最长上升子序列（Longest Increasing Subsequence）")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 动态规划 O(n2)\npublic int lengthOfLIS(int[] nums) {\n    if (nums == null || nums.length == 0) {\n    \t\treturn 0;\n    }\n    int[] dp = new int[nums.length];\n    // 最小值都为1\n    Arrays.fill(dp, 1);\n\n    int max = 0;\n    // 遍历前面的所以数字\n    for (int i = 1; i < nums.length; i++) {\n        for (int j = 0; j < i; j++) {\n          if (nums[j] < nums[i]) {\n            // 当小于当前值时,取最大的数量\n            dp[i] = Math.max(dp[i], dp[j] + 1);\n            max = Math.max(max, dp[i]);\n          }\n        }\n    }\n    return max;\n}\n\n\n\n    // 二分 贪心 O(n*logn)\n    public int lengthOfLIS(int[] nums) {\n        int ans = 0;\n        // 最长上升子序列（Longest  Increasing Subsequence）\n        int[] lis = new int[nums.length];\n        int index = 0;\n        for (int num : nums) {\n            if (index == 0) {\n                // 初始化子序列\n                lis[index++] = num;\n                continue;\n            }\n\n            if (num > lis[index - 1]) {\n                // 大于直接添加到尾部\n                lis[index++] = num;\n                continue;\n            }\n\n\n            // 二分找第一个大于当前值的索引\n            int left = 0, right = index - 1;\n            while (left < right) {\n                // 找左边中位数\n                int mid = (left + right) / 2;\n                if (lis[mid] < num) {\n                    // 继续找右边的\n                    left = mid + 1;\n                } else {\n                    // 可能是目标\n                    right = mid;\n                }\n            }\n\n            // 替换掉\n            lis[right] = num;\n        }\n\n        return index;\n    }\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);