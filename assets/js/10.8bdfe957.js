(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{375:function(s,n,t){"use strict";t.r(n);var e=t(27),a=Object(e.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"蓄水池抽样算法-reservoir-sampling"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#蓄水池抽样算法-reservoir-sampling"}},[s._v("#")]),s._v(" 蓄水池抽样算法（Reservoir Sampling）")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("给定一个数据流，数据流长度N很大，且N直到处理完所有数据之前都不可知，请问如何在只遍历一遍数据（O(N)）的情况下，能够随机选取出m个不重复的数据。")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("int[] result = new int[K];\nfor (int i = 0; i < K; i++) { // 前 K 个元素直接放入数组中\n \tresult[i] = pool[i];\n}\n\nfor (int i = K; i < N; i++) { // K + 1 个元素开始进行概率采样\n  int r = random.nextInt(i + 1);\n  if (r < K) {\n \t result[r] = pool[i];\n  }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])])])}),[],!1,null,null,null);n.default=a.exports}}]);