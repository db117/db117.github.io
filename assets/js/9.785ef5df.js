(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{286:function(n,s,t){"use strict";t.r(s);var a=t(10),e=Object(a.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h3",{attrs:{id:"精确查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#精确查找"}},[n._v("#")]),n._v(" 精确查找")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("/**\n * 精准查询,查询不到返回-1\n */\npublic int bs(int[] nums, int target) {\n    int left = 0, right = nums.length - 1;\n\n    while (left <= right) {\n        // 偶数取左边\n        int mid = left + ((right - left) >> 1);\n\n        int num = nums[mid];\n        if (num == target) {\n            // 找到返回\n            return mid;\n        } else if (num < target) {\n            // 移动左边界\n            left = mid + 1;\n        } else {\n            // 移动右边界\n            right = mid - 1;\n        }\n    }\n    return -1;\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br")])]),s("h3",{attrs:{id:"找等于目标值的最小索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#找等于目标值的最小索引"}},[n._v("#")]),n._v(" 找等于目标值的最小索引")]),n._v(" "),s("p",[n._v("两种写法，主要区别是 "),s("code",[n._v("while")]),n._v(" 判断条件。")]),n._v(" "),s("p",[n._v("当 "),s("code",[n._v("left<=right")]),n._v(" 时结束时 "),s("code",[n._v("left")]),n._v(" 不等于 "),s("code",[n._v("right")]),n._v("。"),s("code",[n._v("left")]),n._v(" 有越界风险。需要判断。")]),n._v(" "),s("p",[n._v("当 "),s("code",[n._v("left<right")]),n._v("时结束时 "),s("code",[n._v("left")]),n._v(" 等于 "),s("code",[n._v("right")]),n._v("。无需判断是否越界。但是需要判断是否找到目标值")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("/**\n * 找到最左边的索引,找不到返回-1\n */\npublic int bsLeft(int[] nums, int target) {\n    int left = 0, right = nums.length - 1;\n    while (left <= right) {\n        int mid = left + ((right - left) >> 1);\n        int num = nums[mid];\n        if (num < target) {\n            // 移动左边界\n            left = mid + 1;\n        } else if (num > target) {\n            // 移动右边界\n            right = mid - 1;\n        } else {\n            // 锁定左边\n            right = mid - 1;\n        }\n    }\n    // 检查越界,是否找到\n    if (left >= nums.length || nums[left] != target) {\n        return -1;\n    }\n    return left;\n}\n\npublic int bsLeft1(int[] nums, int target) {\n    int left = 0, right = nums.length - 1;\n    while (left < right) {\n        // 左边中位数\n        int mid = left + ((right - left) >> 1);\n        if (nums[mid] < target) {\n            // 移动左边界\n            // 上面选择左边中位数,所有加一\n            left = mid + 1;\n        } else {\n            // 大于等于则保持右边界\n            // 等于则继续往左边查找\n            right = mid;\n        }\n    }\n\n    // 需要判断是否找到\n    return nums[right] == target ? right : -1;\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br")])]),s("h3",{attrs:{id:"找等于目标值的最大索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#找等于目标值的最大索引"}},[n._v("#")]),n._v(" 找等于目标值的最大索引")]),n._v(" "),s("p",[n._v("区别同上")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("/**\n * 查找最右边的索引,找不到返回-1\n */\npublic int bsRight(int[] nums, int target) {\n    int left = 0, right = nums.length - 1;\n    while (left <= right) {\n        int mid = left + ((right - left) >> 1);\n        int num = nums[mid];\n        if (num < target) {\n            // 移动左边界\n            left = mid + 1;\n        } else if (num > target) {\n            // 移动右边界\n            right = mid - 1;\n        } else {\n            // 锁定右边,移动左边界\n            left = mid + 1;\n        }\n    }\n    // 检查越界,是否找到\n    if (right < 0 || nums[right] != target) {\n        return -1;\n    }\n    return right;\n}\n\npublic int bsRight1(int[] nums, int target) {\n    int left = 0, right = nums.length - 1;\n    while (left < right) {\n        // 选右边中位数\n        int mid = left + ((right - left + 1) >> 1);\n        if (nums[mid] <= target) {\n            // 小于移动左边界\n            // 上面选择的是右边中位数,所以这里不加一\n            // 等于则继续往右边寻找\n            left = mid;\n        } else {\n            // 移动右边界\n            right = mid - 1;\n        }\n    }\n\n    // 需要判断是否找到\n    return nums[right] == target ? right : -1;\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br")])]),s("h3",{attrs:{id:"找小于目标的最大值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#找小于目标的最大值"}},[n._v("#")]),n._v(" 找小于目标的最大值")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("/**\n * 找小于目标的最大值\n */\npublic int bsLeftMax(int[] nums, int target) {\n    int left = 0, right = nums.length - 1;\n    while (left < right) {\n        // 选右边中位数\n        int mid = left + ((right - left + 1) >> 1);\n        if (nums[mid] < target) {\n            // 当前值可能是目标值,继续往右边找\n            left = mid;\n        } else {\n            // 当前值不可能是目标值,想左边找\n            right = mid - 1;\n        }\n    }\n    // 防止所有数据都大于目标值\n    return nums[right] < target ? right : -1;\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br")])]),s("h3",{attrs:{id:"找大于目标的最小值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#找大于目标的最小值"}},[n._v("#")]),n._v(" 找大于目标的最小值")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("/**\n * 找大于目标的最小值\n */\npublic int bsRightMin(int[] nums, int target) {\n    int left = 0, right = nums.length - 1;\n    while (left < right) {\n        // 选右边中位数\n        int mid = left + ((right - left) >> 1);\n        if (nums[mid] <= target) {\n            // 当前值不可能是目标,继续往右边找\n            left = mid + 1;\n        } else {\n            // 当前值可能是目标,继续往左边找\n            right = mid;\n        }\n    }\n    // 防止所有数据都小于目标值\n    return nums[right] > target ? right : -1;\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);